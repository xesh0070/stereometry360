import flet as ft
import threading
import random
import pyperclip
import json
from pathlib import Path
# –ú–æ–¥–µ–ª–∏ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞ –º–æ–¥–µ–ª–µ–π
from models3d.figures2 import run_pygame, hexagonal_prism

from pygame_manager import run_with_check
# –ú–æ–¥–µ–ª–∏ –¥–ª—è –∑–∞–¥–∞—á —Ç–∏–ø–∞ 3
from models3d.tip3_cube2 import run_pygame1
from models3d.tip3_cube1 import run_pygame1_1
from models3d.tip3_cube1_svetl import run_pygame1_1_svetl
from models3d.tip3_par2_sv import run_pygame_tip3_par2_sv
from models3d.tip3_par2_dark import run_pygame_par2_dark
from models3d.tip3_pir import run_pygame_tip3_pir1
from models3d.tip3_mngg import run_pygame_tip3_mngg
from models3d.tip3_mngg_dark import run_pygame_tip3_mngg_dark


#–ú–æ–¥–µ–ª–∏ –¥–ª—è –∑–∞–¥–∞—á —Ç–∏–ø–∞ 14
from models3d.tip14_rast import run_pygame_tip14_rast1
from models3d.tip14_rast2 import run_pygame_tip14_rast2
from models3d.ygol2 import run_pygame_tip14_ygol1
from models3d.ygol_sv import run_pygame_tip14_ygol1_sv
from models3d.tip14_sech1 import run_pygame_tip14_sech1
from models3d.tip14_V1 import run_pygame_tip14_V1

#–ú–æ–¥–µ–ª–∏ –¥–ª—è —Ç–µ–æ—Ä–∏–∏
from models3d.axy import run_axy1
from models3d.axy2 import run_axy2
from models3d.axy3 import run_axy3
from models3d.sled_axy1 import run_sled1
from models3d.axy_task2 import run_axy_task2
from models3d.axy_task3 import run_axy_task3
from models3d.axy_task4 import run_axy_task4

from catalog_page import get_catalog_container
from theory_part1_axy import axy_task, sled_axy, axy
from theory_part2and3 import lines_arrangement, parallel_line_plane, parallel_line, parallel_planes, polyhedrons, perpendicular_line_plane
from theory_part4 import volumes


# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á —Ç–∏–ø–∞ 3.
SOLVED_TASKS_FILE = "solved_tasks.json"
solved_tasks = set()
def load_solved_tasks():
    global solved_tasks
    try:
        if Path(SOLVED_TASKS_FILE).exists():
            with open(SOLVED_TASKS_FILE, "r") as f:
                solved_tasks = set(json.load(f))
    except:
        solved_tasks = set()

def save_solved_tasks():
    with open(SOLVED_TASKS_FILE, "w") as f:
        json.dump(list(solved_tasks), f)

def add_solved_task(task_id):
    solved_tasks.add(task_id)
    save_solved_tasks()

def is_task_solved(task_id):
    return task_id in solved_tasks

load_solved_tasks()


def main(page: ft.Page):
    page.title = "Stereometry 360¬∞"
    page.theme_mode = ft.ThemeMode.LIGHT
    page.window_icon = "ico"

    #–§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–¥–∞—á 3 —Ç–∏–ø–∞
    def show_tip3_cube1_details0_2(e):
        details0_2.content = None
        global show_solution
        # –ù–∞—Ö–æ–∂—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        responsive_row = details0.content
        first_column = None
        for control in responsive_row.controls:
            if isinstance(control, ft.Column) and control.col.get("md") == 7:
                first_column = control
                break
        if show_solution:
            if len(first_column.controls) > 4:
                first_column.controls.pop()
            show_solution = False
            e.control.text = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
        else:
            solution_content = ft.Column(
                controls=[
                    ft.Text("–î–∞–Ω–æ: S = 18", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–ù–∞–π—Ç–∏: d ", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–†–µ—à–µ–Ω–∏–µ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–ü—É—Å—Ç—å —Ä–µ–±—Ä–æ –∫—É–±–∞ —Ä–∞–≤–Ω–æ a, —Ç–æ–≥–¥–∞ –ø–ª–æ—â–∞–¥—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –∫—É–±–∞ S = 6a¬≤, –∞ –¥–∏–∞–≥–æ–Ω–∞–ª—å –∫—É–±–∞ d = a‚àö3", size=18),

                    ft.Text("–¢–æ–≥–¥–∞ –¥–∏–∞–≥–æ–Ω–∞–ª—å –∫—É–±–∞ —Ä–∞–≤–Ω–∞:", size=18),
                    ft.Text("d = ‚àö3‚àö(S/6) = ‚àö(3√óS/6) = ‚àö(S/2) = ‚àö9 = 3", size=18),
                    ft.Text("–û—Ç–≤–µ—Ç: 3", size=18, weight=ft.FontWeight.BOLD),
                ],
                spacing=5,
                tight=True,
            )
            first_column.controls.append(solution_content)
            show_solution = True
            e.control.text = "–°–ø—Ä—è—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"

        page.update()

    def show_tip3_cube1(e):
        details0.content = None
        page.update()
        global show_solution
        show_solution = False
        # –ì–∞–ª–æ—á–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —Å—Ç–∞—Ç—É—Å–µ(—Ä–µ—à–µ–Ω–æ/–Ω–µ—Ç)
        checkmark = ft.Icon(
            name=ft.Icons.CHECK_CIRCLE_OUTLINE,
            color=ft.Colors.GREEN if is_task_solved("tip3_cube1") else ft.Colors.GREY,
            size=24
        )
        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–µ–º –º–æ–¥–µ–ª–∏
        global light_theme_checked, dark_theme_checked, red_theme_checked
        light_theme_checked = False
        dark_theme_checked = False
        red_theme_checked = False

        def check_item_clicked(e, theme_type):
            global light_theme_checked, dark_theme_checked, red_theme_checked

            if theme_type == "light":
                light_theme_checked = not light_theme_checked
                if light_theme_checked:
                    dark_theme_checked = False
                    red_theme_checked = False
            elif theme_type == "dark":
                dark_theme_checked = not dark_theme_checked
                if dark_theme_checked:
                    light_theme_checked = False
                    red_theme_checked = False
            else:
                red_theme_checked = not red_theme_checked
                if red_theme_checked:
                    light_theme_checked = False
                    dark_theme_checked = False



            for item in theme_menu.items:
                if item.text == "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞":
                    item.checked = light_theme_checked
                elif item.text == "–¢–µ–º–Ω–∞—è —Ç–µ–º–∞":
                    item.checked = dark_theme_checked

            theme_menu.update()

        def handle_open_model(e):
            if light_theme_checked:
                start_pygame_with_cube1_sv(e)
            elif dark_theme_checked:
                start_pygame_with_cube1(e)

            else:
                start_pygame_with_cube1_sv(e)  # –°–≤–µ—Ç–ª–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ

        # –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã
        theme_menu = ft.PopupMenuButton(
            items=[
                ft.PopupMenuItem(
                    text="–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞",
                    checked=False,
                    on_click=lambda e: check_item_clicked(e, "light"),

                ),
                ft.PopupMenuItem(
                    text="–¢–µ–º–Ω–∞—è —Ç–µ–º–∞",
                    checked=False,
                    on_click=lambda e: check_item_clicked(e, "dark"),

                ),

            ],
            icon=ft.Icons.MORE_VERT, style=ft.ButtonStyle(color="#4E426D"),
            tooltip="–í—ã–±–æ—Ä —Ç–µ–º—ã"
        )

        #–ø–æ–ª–µ –≤–≤–æ–¥–∞
        answer_input = ft.TextField(
            hint_text="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç",
            width=180,
            border_color="#4E426D",
            cursor_color="#4E426D",
            text_size=14,
            border_radius=20,
            content_padding=10,
            expand=True,
        )

        def check_answer(e):

            user_answer = answer_input.value.strip().replace(',', '.')
            try:
                num = int(user_answer)
                if num == 3:
                    feedback = f"–ú–æ–ª–æ–¥–µ—Ü! –û—Ç–≤–µ—Ç {num} –≤–µ—Ä–Ω—ã–π! üéâ"
                    answer_input.border_color = ft.Colors.GREEN
                    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ —Ä–µ—à–µ–Ω–Ω—ã–µ
                    add_solved_task("tip3_cube1")
                    # –û–±–Ω–æ–≤–ª—è–µ–º –≥–∞–ª–æ—á–∫—É
                    update_checkmark("tip3_cube1", True)

                else:
                    feedback = f"–û—Ç–≤–µ—Ç {num} –Ω–µ–≤–µ—Ä–Ω—ã–π. ‚ùå"
                    answer_input.border_color = ft.Colors.RED
            except ValueError:
                feedback = "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ! ‚ö†Ô∏è"
                answer_input.border_color = ft.Colors.ORANGE

            answer_input.hint_text = feedback
            answer_input.value = ""
            answer_input.width = max(180, len(feedback) * 9)
            page.update()

        def update_checkmark(task_id, is_solved=None):
            if is_solved is None:
                is_solved = is_task_solved(task_id)
            pass

        answer_input.on_submit = check_answer

        enter_icon = ft.IconButton(
            icon=ft.Icons.KEYBOARD_RETURN,
            icon_color="#4E426D",
            on_click=check_answer,
            tooltip="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç",
        )
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–¥–∞—á–∏
        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –ö—É–±",
                                size=12, weight=ft.FontWeight.BOLD),
                        ft.Row(
                            controls=[
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 1",
                                    on_click=show_tip3_cube1,
                                    style=ft.ButtonStyle(color="black"), width=100),
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 2",
                                    on_click=show_tip3_cube2,
                                    style=ft.ButtonStyle(color="black"), width=100),
                            ],
                            spacing=10
                        ),
                        ft.Row([
                            ft.Text("–ó–∞–¥–∞—á–∞ ‚Ññ1", size=24, weight=ft.FontWeight.BOLD),
                            checkmark
                        ], spacing=10),
                        ft.Text(
                            "–ü–ª–æ—â–∞–¥—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –∫—É–±–∞ —Ä–∞–≤–Ω–∞ 18. –ù–∞–π–¥–∏—Ç–µ –µ–≥–æ –¥–∏–∞–≥–æ–Ω–∞–ª—å.",
                            size=21,
                        ),
                        ft.Row(
                            controls=[
                                ft.Row(
                                    controls=[
                                        answer_input,
                                        enter_icon,
                                    ],
                                    spacing=10,
                                    alignment=ft.MainAxisAlignment.START,

                                ),
                                ft.Row([ft.TextButton(
                                    "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                                    on_click=show_tip3_cube1_details0_2,
                                    style=ft.ButtonStyle(color="#4E426D"),
                                ),], spacing =10,
                                ),


                            ],

                        ),

                    ],
                    spacing=10,

                    alignment=ft.MainAxisAlignment.START,
                ),
                ft.Column(
                    col={"sm": 9, "md": 5},
                    controls=[
                        ft.Container(height=5),
                        ft.Image(
                            src="assets/cube0.jpg",
                            width=190,
                            height=190,
                            fit=ft.ImageFit.SCALE_DOWN,


                        ),
                        ft.Row(
                            controls=[
                                ft.ElevatedButton(
                                    "–û—Ç–∫—Ä—ã—Ç—å 3d –º–æ–¥–µ–ª—å",
                                    on_click=handle_open_model,
                                    style=ft.ButtonStyle(color="#4E426D"),

                                    width=180
                                ),
                                theme_menu,
                            ],
                            spacing=5,
                            alignment=ft.MainAxisAlignment.CENTER,

                        ),
                    ],

                    spacing=15,
                    horizontal_alignment=ft.CrossAxisAlignment.CENTER,

                ),
            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip3_cube2_details0_2(e):
        details0_2.content = None
        global show_solution

        responsive_row = details0.content
        first_column = None
        for control in responsive_row.controls:
            if isinstance(control, ft.Column) and control.col.get("md") == 7:
                first_column = control
                break

        if show_solution:

            if len(first_column.controls) > 4:
                first_column.controls.pop()
            show_solution = False
            e.control.text = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
        else:

            solution_content = ft.Column(
                controls=[
                    ft.Text("–î–∞–Ω–æ: V = 8", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–ù–∞–π—Ç–∏: S ", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–†–µ—à–µ–Ω–∏–µ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–ü–ª–æ—â–∞–¥—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –∫—É–±–∞ –≤—ã—Ä–∞–∂–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –µ–≥–æ —Ä–µ–±—Ä–æ a —Ñ–æ—Ä–º—É–ª–æ–π S = 6a¬≤, –æ–±—ä–µ–º —Ñ–æ—Ä–º—É–ª–æ–π V = a¬≥. –ü–æ—ç—Ç–æ–º—É a¬≥ = 8 –æ—Ç–∫—É–¥–∞ a = 2; ", size=18),
                    ft.Text("S = 6√ó2¬≤ = 24", size=18),

                    ft.Text("–û—Ç–≤–µ—Ç: 24", size=18, weight=ft.FontWeight.BOLD),
                ],
                spacing=5,
                tight=True,
            )

            first_column.controls.append(solution_content)
            show_solution = True
            e.control.text = "–°–ø—Ä—è—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"

        page.update()

    def show_tip3_cube2(e):
        details0.content = None
        page.update()

        global show_solution
        show_solution = False

        checkmark = ft.Icon(
            name=ft.Icons.CHECK_CIRCLE_OUTLINE,
            color=ft.Colors.GREEN if is_task_solved("tip3_cube2") else ft.Colors.GREY,
            size=24
        )
        def update_checkmark(task_id, is_solved=None):
            if is_solved is None:
                is_solved = is_task_solved(task_id)
            pass


        global light_theme_checked, dark_theme_checked
        light_theme_checked = False
        dark_theme_checked = False

        def check_item_clicked(e, theme_type):
            global light_theme_checked, dark_theme_checked

            if theme_type == "light":
                light_theme_checked = not light_theme_checked
                if light_theme_checked:
                    dark_theme_checked = False
            else:
                dark_theme_checked = not dark_theme_checked
                if dark_theme_checked:
                    light_theme_checked = False

            for item in theme_menu.items:
                if item.text == "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞":
                    item.checked = light_theme_checked
                elif item.text == "–¢–µ–º–Ω–∞—è —Ç–µ–º–∞":
                    item.checked = dark_theme_checked
            theme_menu.update()

        def handle_open_model(e):
            if light_theme_checked:
                start_pygame_with_cube1_sv(e)
            elif dark_theme_checked:
                start_pygame_with_cube1(e)
            else:
                start_pygame_with_cube1_sv(e)

        theme_menu = ft.PopupMenuButton(
            items=[
                ft.PopupMenuItem(
                    text="–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞",
                    checked=False,
                    on_click=lambda e: check_item_clicked(e, "light"),

                ),
                ft.PopupMenuItem(
                    text="–¢–µ–º–Ω–∞—è —Ç–µ–º–∞",
                    checked=False,
                    on_click=lambda e: check_item_clicked(e, "dark"),

                ),
            ],
            icon=ft.Icons.MORE_VERT, style=ft.ButtonStyle(color="#4E426D"),
            tooltip="–í—ã–±–æ—Ä —Ç–µ–º—ã"
        )

        answer_input = ft.TextField(
            hint_text="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç",
            width=180,
            border_color="#4E426D",
            cursor_color="#4E426D",
            text_size=14,
            border_radius=20,
            content_padding=10,
            expand=True,
        )

        def check_answer(e):

            user_answer = answer_input.value.strip().replace(',', '.')
            try:
                num = int(user_answer)
                if num == 24:
                    feedback = f"–ú–æ–ª–æ–¥–µ—Ü! –û—Ç–≤–µ—Ç {num} –≤–µ—Ä–Ω—ã–π! üéâ"
                    answer_input.border_color = ft.Colors.GREEN
                    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ —Ä–µ—à–µ–Ω–Ω—ã–µ
                    add_solved_task("tip3_cube2")
                    # –û–±–Ω–æ–≤–ª—è–µ–º –≥–∞–ª–æ—á–∫—É
                    update_checkmark("tip3_cube2", True)
                else:
                    feedback = f"–û—Ç–≤–µ—Ç {num} –Ω–µ–≤–µ—Ä–Ω—ã–π. ‚ùå"
                    answer_input.border_color = ft.Colors.RED
            except ValueError:
                feedback = "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ! ‚ö†Ô∏è"
                answer_input.border_color = ft.Colors.ORANGE

            answer_input.hint_text = feedback
            answer_input.value = ""
            answer_input.width = max(180, len(feedback) * 9)
            page.update()

        answer_input.on_submit = check_answer

        enter_icon = ft.IconButton(
            icon=ft.Icons.KEYBOARD_RETURN,
            icon_color="#4E426D",
            on_click=check_answer,
            tooltip="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç",
        )

        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –ö—É–±",
                                size=12, weight=ft.FontWeight.BOLD),
                        ft.Row(
                            controls=[
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 1",
                                    on_click=show_tip3_cube1,
                                    style=ft.ButtonStyle(color="black"), width=100),
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 2",
                                    on_click=show_tip3_cube2,
                                    style=ft.ButtonStyle(color="black"), width=100),
                            ],
                            spacing=10
                        ),
                        ft.Row([
                            ft.Text("–ó–∞–¥–∞—á–∞ ‚Ññ2", size=24, weight=ft.FontWeight.BOLD),
                            checkmark
                        ], spacing=10),
                        ft.Text(
                            "–û–±—ä–µ–º –∫—É–±–∞ —Ä–∞–≤–µ–Ω 8. –ù–∞–π–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –µ–≥–æ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏.",
                            size=21,
                        ),
                        ft.Row(
                            controls=[
                                ft.Row(
                                    controls=[
                                        answer_input,
                                        enter_icon,
                                    ],
                                    spacing=10,
                                    alignment=ft.MainAxisAlignment.START,
                                ),
                                ft.TextButton(
                                    "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                                    on_click=show_tip3_cube2_details0_2,
                                    style=ft.ButtonStyle(color="#4E426D")
                                ),
                            ],
                        ),

                    ],
                    spacing=10,

                    alignment=ft.MainAxisAlignment.START,
                ),
                ft.Column(
                    col={"sm": 9, "md": 5},
                    controls=[
                        ft.Container(height=5),
                        ft.Image(
                            src="assets/cube0.jpg",
                            width=190,
                            height=190,
                            fit=ft.ImageFit.SCALE_DOWN
                        ),
                        ft.Row(
                            controls=[
                                ft.ElevatedButton(
                                    "–û—Ç–∫—Ä—ã—Ç—å 3d –º–æ–¥–µ–ª—å",
                                    on_click=handle_open_model,
                                    style=ft.ButtonStyle(color="#4E426D"),

                                    width=180
                                ),
                                theme_menu,
                            ],
                            spacing=5,
                            alignment=ft.MainAxisAlignment.CENTER,
                        ),
                    ],

                    spacing=15,
                    horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                ),
            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip3_pir1_details0_2(e):
        global show_solution


        responsive_row = details0.content
        first_column = None
        for control in responsive_row.controls:
            if isinstance(control, ft.Column) and control.col.get("md") == 7:
                first_column = control
                break

        if show_solution:

            if len(first_column.controls) > 4:
                first_column.controls.pop()
            show_solution = False
            e.control.text = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
        else:
            solution_content = ft.Column(
                controls=[
                    ft.Text("–î–∞–Ω–æ: SABCD ‚Äî –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–∏—Ä–∞–º–∏–¥–∞; O ‚àí —Ü–µ–Ω—Ç—Ä –æ—Å–Ω–æ–≤–∞–Ω–∏—è; SO = 15; BD = 16.  ",
                            size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–ù–∞–π—Ç–∏: SA ", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–†–µ—à–µ–Ω–∏–µ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text(
                        "–í –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–∏—Ä–∞–º–∏–¥–µ –≤–µ—Ä—à–∏–Ω–∞ –ø—Ä–æ–µ—Ü–∏—Ä—É–µ—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä –æ—Å–Ω–æ–≤–∞–Ω–∏—è, —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, \nSO —è–≤–ª—è–µ—Ç—Å—è –≤—ã—Å–æ—Ç–æ–π –ø–∏—Ä–∞–º–∏–¥—ã. –¢–æ–≥–¥–∞ –ø–æ —Ç–µ–æ—Ä–µ–º–µ –ü–∏—Ñ–∞–≥–æ—Ä–∞",
                        size=18),
                    ft.Row(
                        controls=[
                            ft.Text("SA¬≤ = SB¬≤ = SO¬≤ + BO¬≤ = SO¬≤ + (  ", size=17),
                            ft.Column(
                                controls=[
                                    ft.Text(" BD", size=17),
                                    ft.Container(width=30, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("  2 ", size=17),
                                ],
                                spacing=0,
                            ),
                            ft.Text("  )¬≤ = 225 + 64 = 289; SA = 17", size=17),
                        ],
                        spacing=-10,
                    ),
                    ft.Text("–û—Ç–≤–µ—Ç: 17", size=18, weight=ft.FontWeight.BOLD),
                ],
                spacing=5,
            )

            first_column.controls.append(solution_content)
            show_solution = True
            e.control.text = "–°–ø—Ä—è—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"

        page.update()

    def show_tip3_pir1(e):
        details0.content = None
        page.update()

        global show_solution
        show_solution = False

        checkmark = ft.Icon(
            name=ft.Icons.CHECK_CIRCLE_OUTLINE,
            color=ft.Colors.GREEN if is_task_solved("tip3_pir1") else ft.Colors.GREY,
            size=24
        )
        def update_checkmark(task_id, is_solved=None):
            if is_solved is None:
                is_solved = is_task_solved(task_id)
            pass


        answer_input = ft.TextField(
            hint_text="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç",
            width=180,
            border_color="#4E426D",
            cursor_color="#4E426D",
            text_size=14,
            border_radius=20,
            content_padding=10,
            expand=True,
        )

        def check_answer(e):
            user_answer = answer_input.value.strip().replace(',', '.')
            try:
                num = int(user_answer)
                if num == 17:
                    feedback = f"–ú–æ–ª–æ–¥–µ—Ü! –û—Ç–≤–µ—Ç {num} –≤–µ—Ä–Ω—ã–π! üéâ "
                    answer_input.border_color = ft.Colors.GREEN
                    add_solved_task("tip3_pir1")
                    update_checkmark("tip3_pir1", True)
                else:
                    feedback = f"–û—Ç–≤–µ—Ç {num} –Ω–µ–≤–µ—Ä–Ω—ã–π. ‚ùå"
                    answer_input.border_color = ft.Colors.RED
            except ValueError:
                feedback = "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ! ‚ö†Ô∏è"
                answer_input.border_color = ft.Colors.ORANGE

            answer_input.hint_text = feedback
            answer_input.value = ""
            answer_input.width = max(
                180,
                len(feedback) * 9
            )

            page.update()

        answer_input.on_submit = check_answer

        enter_icon = ft.IconButton(
            icon=ft.Icons.KEYBOARD_RETURN,
            icon_color="#4E426D",
            on_click=check_answer,
            tooltip="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç",
        )

        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –ü–∏—Ä–∞–º–∏–¥–∞",
                                size=12, weight=ft.FontWeight.BOLD),
                        ft.Row(
                            controls=[
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 1",
                                    on_click=show_tip3_pir1,
                                    style=ft.ButtonStyle(color="black"), width=100),
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 2",
                                    on_click=show_tip3_pir2,
                                    style=ft.ButtonStyle(color="black"), width=100),
                            ],
                            spacing=10
                        ),
                        ft.Row([
                            ft.Text("–ó–∞–¥–∞—á–∞ ‚Ññ1", size=24, weight=ft.FontWeight.BOLD),
                            checkmark
                        ], spacing=10),
                        ft.Text(
                            "–í –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —á–µ—Ç—ã—Ä–µ—Ö—É–≥–æ–ª—å–Ω–æ–π –ø–∏—Ä–∞–º–∏–¥–µ SABCD —Ç–æ—á–∫–∞ O ‚àí —Ü–µ–Ω—Ç—Ä –æ—Å–Ω–æ–≤–∞–Ω–∏—è, "
                            "S ‚àí –≤–µ—Ä—à–∏–Ω–∞, SO = 15, BD = 16. –ù–∞–π–¥–∏—Ç–µ –±–æ–∫–æ–≤–æ–µ —Ä–µ–±—Ä–æ SA.",
                            size=21,
                        ),
                        ft.Row(
                            controls=[
                                ft.Row(
                                    controls=[
                                        answer_input,
                                        enter_icon,
                                    ],
                                    spacing=10,
                                    alignment=ft.MainAxisAlignment.START,
                                ),
                                ft.TextButton(
                                    "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                                    on_click=show_tip3_pir1_details0_2,
                                    style=ft.ButtonStyle(color="#4E426D")
                                ),
                            ],
                        ),
                    ],
                    spacing=10,
                    alignment=ft.MainAxisAlignment.START,
                ),
                ft.Column(
                    col={"sm": 9, "md": 5},
                    controls=[
                        ft.Container(height=5),
                        ft.Image(
                            src="assets/pir1.svg",
                            width=230,
                            height=230,
                            # fit=ft.ImageFit.SCALE_DOWN
                        ),
                        ft.ElevatedButton(
                            "–û—Ç–∫—Ä—ã—Ç—å 3d –º–æ–¥–µ–ª—å",
                            on_click=lambda e: start_pygame_with_pir1(e),
                            style=ft.ButtonStyle(color="#4E426D")
                        ),
                    ],
                    spacing=15,
                    horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                ),
            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip3_pir2(e):
        details0.content = None
        page.update()

        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –ü–∏—Ä–∞–º–∏–¥–∞",
                                size=12, weight=ft.FontWeight.BOLD),

                        ft.Text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å —ç—Ç–∞ –∑–∞–¥–∞—á–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", size=24, weight=ft.FontWeight.BOLD),
                    ]
                ),

            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip3_par1_details0_2(e):
        global show_solution
        responsive_row = details0.content
        first_column = None
        for control in responsive_row.controls:
            if isinstance(control, ft.Column) and control.col.get("md") == 7:
                first_column = control
                break

        if show_solution:
            if len(first_column.controls) > 4:
                first_column.controls.pop()
            show_solution = False
            e.control.text = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
        else:
            solution_content = ft.Column(
                controls=[
                    ft.Text("–î–∞–Ω–æ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("ABCDA‚ÇÅB‚ÇÅC‚ÇÅD‚ÇÅ ‚Äî –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–π –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥", size=18),
                    ft.Text("BD‚ÇÅ = 3; CD = 2; AD = 2; ", size=18),
                    ft.Text("–ù–∞–π—Ç–∏: AA‚ÇÅ ", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–†–µ—à–µ–Ω–∏–µ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–ù–∞–π–¥–µ–º –¥–∏–∞–≥–æ–Ω–∞–ª—å BD –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ ABCD –ø–æ —Ç–µ–æ—Ä–µ–º–µ –ü–∏—Ñ–∞–≥–æ—Ä–∞:", size=18),
                    ft.Text("BD = ‚àö(AD¬≤ + AB¬≤) = ‚àö(AD¬≤ + CD¬≤) = ‚àö8", size=18),
                    ft.Text("–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ DD‚ÇÅB. –ü–æ —Ç. –ü–∏—Ñ–∞–≥–æ—Ä–∞:", size=18),
                    ft.Text("AA‚ÇÅ = DD‚ÇÅ = ‚àö(BD‚ÇÅ¬≤ - BD¬≤) = ‚àö(9 - 8) = 1", size=18),
                    ft.Text("–û—Ç–≤–µ—Ç: 1", size=18, weight=ft.FontWeight.BOLD),
                ],
                spacing=5,
            )

            first_column.controls.append(solution_content)
            show_solution = True
            e.control.text = "–°–ø—Ä—è—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"

        page.update()

    def show_tip3_par1(e):
        details0.content = None
        page.update()

        global show_solution
        show_solution = False
        def update_checkmark(task_id, is_solved=None):
            if is_solved is None:
                is_solved = is_task_solved(task_id)
            pass
        checkmark = ft.Icon(
            name=ft.Icons.CHECK_CIRCLE_OUTLINE,
            color=ft.Colors.GREEN if is_task_solved("tip3_par1") else ft.Colors.GREY,
            size=24
        )

        answer_input = ft.TextField(
            hint_text="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç",
            width=180,
            border_color="#4E426D",
            cursor_color="#4E426D",
            text_size=14,
            border_radius=20,
            content_padding=10,
            expand=True,
        )

        def check_answer(e):
            user_answer = answer_input.value.strip().replace(',', '.')
            try:
                num = int(user_answer)
                if num == 1:
                    feedback = f"–ú–æ–ª–æ–¥–µ—Ü! –û—Ç–≤–µ—Ç {num} –≤–µ—Ä–Ω—ã–π! üéâ"
                    answer_input.border_color = ft.Colors.GREEN
                    add_solved_task("tip3_par1")
                    update_checkmark("tip3_par1", True)
                else:
                    feedback = f"–û—Ç–≤–µ—Ç {num} –Ω–µ–≤–µ—Ä–Ω—ã–π. ‚ùå"
                    answer_input.border_color = ft.Colors.RED
            except ValueError:
                feedback = "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ! ‚ö†Ô∏è"
                answer_input.border_color = ft.Colors.ORANGE

            answer_input.hint_text = feedback
            answer_input.value = ""
            answer_input.width = max(180, len(feedback) * 9)
            page.update()

        answer_input.on_submit = check_answer

        enter_icon = ft.IconButton(
            icon=ft.Icons.KEYBOARD_RETURN,
            icon_color="#4E426D",
            on_click=check_answer,
            tooltip="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç",
        )

        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –ü–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥",
                                size=12, weight=ft.FontWeight.BOLD),
                        ft.Row(
                            controls=[
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 1",
                                    on_click=show_tip3_par2,
                                    style=ft.ButtonStyle(color="black"), width=100),
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 2",
                                    on_click=show_tip3_par1,
                                    style=ft.ButtonStyle(color="black"), width=100),
                            ],
                            spacing=10
                        ),
                        ft.Row([
                            ft.Text("–ó–∞–¥–∞—á–∞ ‚Ññ2", size=24, weight=ft.FontWeight.BOLD),
                            checkmark
                        ], spacing=10),
                        ft.Text(
                            "–í –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–º –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥–µ ABCDA‚ÇÅB‚ÇÅC‚ÇÅD‚ÇÅ –∏–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ BD‚ÇÅ=3, CD=2, AD=2. –ù–∞–π–¥–∏—Ç–µ –¥–ª–∏–Ω—É —Ä–µ–±—Ä–∞ AA‚ÇÅ",
                            size=21,
                        ),
                        ft.Row(
                            controls=[
                                ft.Row(
                                    controls=[
                                        answer_input,
                                        enter_icon,
                                    ],
                                    spacing=10,
                                    alignment=ft.MainAxisAlignment.START,
                                ),
                                ft.TextButton(
                                    "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                                    on_click=show_tip3_par1_details0_2,
                                    style=ft.ButtonStyle(color="#4E426D")
                                ),
                            ],
                        ),
                    ],
                    spacing=10,
                    alignment=ft.MainAxisAlignment.START,
                ),
                ft.Column(
                    col={"sm": 9, "md": 5},
                    controls=[
                        ft.Container(height=5),
                        ft.Image(
                            src="assets/cube0_2.jpg",
                            width=250,
                            height=250,
                        ),
                        ft.ElevatedButton(
                            "–û—Ç–∫—Ä—ã—Ç—å 3d –º–æ–¥–µ–ª—å",
                            on_click=lambda e: start_pygame_with_cube2(e),
                            style=ft.ButtonStyle(color="#4E426D")
                        ),
                    ],
                    spacing=15,
                    horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                ),
            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip3_par2_details0_2(e):
        global show_solution
        responsive_row = details0.content
        first_column = None
        second_column = None
        for control in responsive_row.controls:
            if isinstance(control, ft.Column):
                if control.col.get("md") == 7:
                    first_column = control
                elif control.col.get("md") == 5:
                    second_column = control

        if show_solution:

            if len(first_column.controls) > 4:
                first_column.controls.pop()

            if len(second_column.controls) > 3:
                second_column.controls.pop()
            show_solution = False
            e.control.text = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
        else:
            solution_content = ft.ResponsiveRow(
                controls=[
                    ft.Column(
                        col={"sm": 12, "md": 12},
                        controls=[
                            ft.Text("–î–∞–Ω–æ:", size=18, weight=ft.FontWeight.BOLD),
                            ft.Text("ABCDA‚ÇÅB‚ÇÅC‚ÇÅD‚ÇÅ ‚Äî –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–π –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥", size=18),
                            ft.Text("AB = 5; AD = 4; AA‚ÇÅ = 3.", size=18),
                            ft.Text("–ù–∞–π—Ç–∏: ‚à†(ABD‚ÇÅ) ", size=18, weight=ft.FontWeight.BOLD),
                            ft.Text("–†–µ—à–µ–Ω–∏–µ:", size=18, weight=ft.FontWeight.BOLD),
                            ft.Text("–í –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–µ AA‚ÇÅD‚ÇÅD –æ—Ç—Ä–µ–∑–æ–∫ AD‚ÇÅ —è–≤–ª—è–µ—Ç—Å—è –¥–∏–∞–≥–æ–Ω–∞–ª—å—é, A‚ÇÅD‚ÇÅ = AD. ", size=18),
                            ft.Text("–ü–æ —Ç. –ü–∏—Ñ–∞–≥–æ—Ä–∞: AD‚ÇÅ¬≤ = AA‚ÇÅ¬≤ + A‚ÇÅD‚ÇÅ¬≤ = 9 + 16 = 25 ‚áí AD‚ÇÅ = ‚àö25 = 5.", size=18),
                            ft.Text(
                                "–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ ABD‚ÇÅ —Ä–∞–≤–Ω–æ–±–µ–¥—Ä–µ–Ω–Ω—ã–π: AB = AD‚ÇÅ = 5 –∑–Ω–∞—á–∏—Ç, –µ–≥–æ –æ—Å—Ç—Ä—ã–µ —É–≥–ª—ã —Ä–∞–≤–Ω—ã 45¬∞.",
                                size=18),
                            ft.Text("–û—Ç–≤–µ—Ç: 45", size=18, weight=ft.FontWeight.BOLD),
                        ]
                    )
                ],
                spacing=5,
            )

            solution_image = ft.Image(
                src="assets/par2_2.svg",
                width=245,
                height=180,
            )
            second_column.controls.append(solution_image)
            first_column.controls.append(solution_content)
            show_solution = True
            e.control.text = "–°–ø—Ä—è—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"

        page.update()

    def show_tip3_par2(e):
        details0.content = None
        page.update()
        global show_solution
        show_solution = False
        global light_theme_checked, dark_theme_checked
        light_theme_checked = False
        dark_theme_checked = False

        def check_item_clicked(e, theme_type):
            global light_theme_checked, dark_theme_checked

            if theme_type == "light":
                light_theme_checked = not light_theme_checked
                if light_theme_checked:
                    dark_theme_checked = False
            else:
                dark_theme_checked = not dark_theme_checked
                if dark_theme_checked:
                    light_theme_checked = False

            for item in theme_menu.items:
                if item.text == "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞":
                    item.checked = light_theme_checked
                elif item.text == "–¢–µ–º–Ω–∞—è —Ç–µ–º–∞":
                    item.checked = dark_theme_checked
            theme_menu.update()

        def handle_open_model(e):
            if light_theme_checked:
                start_pygame_with_par2_sv(e)
            elif dark_theme_checked:
                start_pygame_with_par2_dark(e)
            else:
                start_pygame_with_par2_sv(e)
        theme_menu = ft.PopupMenuButton(
            items=[
                ft.PopupMenuItem(
                    text="–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞",
                    checked=False,
                    on_click=lambda e: check_item_clicked(e, "light"),

                ),
                ft.PopupMenuItem(
                    text="–¢–µ–º–Ω–∞—è —Ç–µ–º–∞",
                    checked=False,
                    on_click=lambda e: check_item_clicked(e, "dark"),

                ),
            ],
            icon=ft.Icons.MORE_VERT, style=ft.ButtonStyle(color="#4E426D"),
            tooltip="–í—ã–±–æ—Ä —Ç–µ–º—ã"
        )

        def update_checkmark(task_id, is_solved=None):
            if is_solved is None:
                is_solved = is_task_solved(task_id)
            pass

        checkmark = ft.Icon(
            name=ft.Icons.CHECK_CIRCLE_OUTLINE,
            color=ft.Colors.GREEN if is_task_solved("tip3_par2") else ft.Colors.GREY,
            size=24
        )

        answer_input = ft.TextField(
            hint_text="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç",
            width=180,
            border_color="#4E426D",
            cursor_color="#4E426D",
            text_size=14,
            border_radius=20,
            content_padding=10,
            expand=True,
        )

        def check_answer(e):

            user_answer = answer_input.value.strip().replace(',', '.')
            try:
                num = int(user_answer)
                if num == 45:
                    feedback = f"–ú–æ–ª–æ–¥–µ—Ü! –û—Ç–≤–µ—Ç {num} –≤–µ—Ä–Ω—ã–π! üéâ"
                    answer_input.border_color = ft.Colors.GREEN
                    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ —Ä–µ—à–µ–Ω–Ω—ã–µ
                    add_solved_task("tip3_par2")
                    # –û–±–Ω–æ–≤–ª—è–µ–º –≥–∞–ª–æ—á–∫—É
                    update_checkmark("tip3_par2", True)
                else:
                    feedback = f"–û—Ç–≤–µ—Ç {num} –Ω–µ–≤–µ—Ä–Ω—ã–π. ‚ùå"
                    answer_input.border_color = ft.Colors.RED
            except ValueError:
                feedback = "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ! ‚ö†Ô∏è"
                answer_input.border_color = ft.Colors.ORANGE

            answer_input.hint_text = feedback
            answer_input.value = ""
            answer_input.width = max(180, len(feedback) * 9)
            page.update()

        answer_input.on_submit = check_answer

        enter_icon = ft.IconButton(
            icon=ft.Icons.KEYBOARD_RETURN,
            icon_color="#4E426D",
            on_click=check_answer,
            tooltip="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç",
        )
        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –ü–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥",
                                size=12, weight=ft.FontWeight.BOLD),
                        ft.Row(
                            controls=[
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 1",
                                    on_click=show_tip3_par2,
                                    style=ft.ButtonStyle(color="black"), width=100),
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 2",
                                    on_click=show_tip3_par1,
                                    style=ft.ButtonStyle(color="black"), width=100),
                            ],
                            spacing=10
                        ),
                        ft.Row([
                            ft.Text("–ó–∞–¥–∞—á–∞ ‚Ññ1", size=24, weight=ft.FontWeight.BOLD),
                            checkmark
                        ], spacing=10),
                        ft.Text(
                            "–ù–∞–π–¥–∏—Ç–µ —É–≥–æ–ª ABD‚ÇÅ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ AB=5, AD=4, AA‚ÇÅ=3. –î–∞–π—Ç–µ –æ—Ç–≤–µ—Ç –≤ –≥—Ä–∞–¥—É—Å–∞—Ö.",

                            size=21,
                        ),
                        ft.Row(
                            controls=[
                                ft.Row(
                                    controls=[
                                        answer_input,
                                        enter_icon,
                                    ],
                                    spacing=10,
                                    alignment=ft.MainAxisAlignment.START,
                                ),
                                ft.TextButton(
                                    "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                                    on_click=show_tip3_par2_details0_2,
                                    style=ft.ButtonStyle(color="#4E426D")
                                ),
                            ],
                        ),
                    ],
                    spacing=10,
                    alignment=ft.MainAxisAlignment.START,
                ),
                ft.Column(
                    col={"sm": 9, "md": 5},
                    controls=[
                        ft.Container(height=5),
                        ft.Image(
                            src="assets/par2_0.svg",
                            width=235,
                            height=185,
                        ),
                        ft.Row(
                            controls=[
                                ft.ElevatedButton(
                                    "–û—Ç–∫—Ä—ã—Ç—å 3d –º–æ–¥–µ–ª—å",
                                    on_click=handle_open_model,
                                    style=ft.ButtonStyle(color="#4E426D"),

                                    width=180
                                ),
                                theme_menu,
                            ],
                            spacing=5,
                            alignment=ft.MainAxisAlignment.CENTER,
                        ),
                    ],
                    spacing=15,
                    horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                ),
            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip3_mngg1_details0_2(e):
        global show_solution
        responsive_row = details0.content
        first_column = None
        for control in responsive_row.controls:
            if isinstance(control, ft.Column) and control.col.get("md") == 7:
                first_column = control
                break

        if show_solution:

            if len(first_column.controls) > 4:
                first_column.controls.pop()
            show_solution = False
            e.control.text = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
        else:
            # –°–æ–∑–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–µ—à–µ–Ω–∏—è
            solution_content = ft.Column(
                controls=[
                    ft.Text("–†–µ—à–µ–Ω–∏–µ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text(
                        "–û–±—ä–µ–º –¥–∞–Ω–Ω–æ–≥–æ –º–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω–∏–∫–∞ —Ä–∞–≤–µ–Ω —Å—É–º–º–µ –æ–±—ä–µ–º–æ–≤ \n–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥–æ–≤ —Å —Ä–µ–±—Ä–∞–º–∏ 5,‚ÄØ4,‚ÄØ2 –∏ 2,‚ÄØ2,‚ÄØ4:",
                        size=18),
                    ft.Text("V = V‚ÇÅ + V‚ÇÇ = 5√ó4√ó2 + 2√ó2√ó4 = 56", size=18),
                    ft.Text("–û—Ç–≤–µ—Ç: 56", size=18, weight=ft.FontWeight.BOLD),
                ],
                spacing=5,
            )

            first_column.controls.append(solution_content)
            show_solution = True
            e.control.text = "–°–ø—Ä—è—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"

        page.update()

    def show_tip3_mngg1(e):
        details0.content = None
        page.update()

        global show_solution
        show_solution = False

        def update_checkmark(task_id, is_solved=None):
            if is_solved is None:
                is_solved = is_task_solved(task_id)
            pass
        checkmark = ft.Icon(
            name=ft.Icons.CHECK_CIRCLE_OUTLINE,
            color=ft.Colors.GREEN if is_task_solved("tip3_mngg1") else ft.Colors.GREY,
            size=24
        )

        global light_theme_checked, dark_theme_checked
        light_theme_checked = False
        dark_theme_checked = False

        def check_item_clicked(e, theme_type):
            global light_theme_checked, dark_theme_checked

            if theme_type == "light":
                light_theme_checked = not light_theme_checked
                if light_theme_checked:
                    dark_theme_checked = False
            else:
                dark_theme_checked = not dark_theme_checked
                if dark_theme_checked:
                    light_theme_checked = False

            for item in theme_menu.items:
                if item.text == "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞":
                    item.checked = light_theme_checked
                elif item.text == "–¢–µ–º–Ω–∞—è —Ç–µ–º–∞":
                    item.checked = dark_theme_checked
            theme_menu.update()

        def handle_open_model(e):
            if light_theme_checked:
                start_pygame_with_mngg1(e)
            elif dark_theme_checked:
                start_pygame_with_mngg1_dark(e)
            else:
                start_pygame_with_mngg1_dark(e)

        theme_menu = ft.PopupMenuButton(
            items=[
                ft.PopupMenuItem(
                    text="–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞",
                    checked=False,
                    on_click=lambda e: check_item_clicked(e, "light"),

                ),
                ft.PopupMenuItem(
                    text="–¢–µ–º–Ω–∞—è —Ç–µ–º–∞",
                    checked=False,
                    on_click=lambda e: check_item_clicked(e, "dark"),

                ),
            ],
            icon=ft.Icons.MORE_VERT, style=ft.ButtonStyle(color="#4E426D"),
            tooltip="–í—ã–±–æ—Ä —Ç–µ–º—ã"
        )

        answer_input = ft.TextField(
            hint_text="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç",
            width=180,
            border_color="#4E426D",
            cursor_color="#4E426D",
            text_size=14,
            border_radius=20,
            content_padding=10,
            expand=True,
        )

        def check_answer(e):

            user_answer = answer_input.value.strip().replace(',', '.')
            try:
                num = int(user_answer)
                if num == 56:
                    feedback = f"–ú–æ–ª–æ–¥–µ—Ü! –û—Ç–≤–µ—Ç {num} –≤–µ—Ä–Ω—ã–π! üéâ"
                    answer_input.border_color = ft.Colors.GREEN
                    add_solved_task("tip3_mngg1")
                    update_checkmark("tip3_mngg1", True)
                else:
                    feedback = f"–û—Ç–≤–µ—Ç {num} –Ω–µ–≤–µ—Ä–Ω—ã–π. ‚ùå"
                    answer_input.border_color = ft.Colors.RED
            except ValueError:
                feedback = "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ! ‚ö†Ô∏è"
                answer_input.border_color = ft.Colors.ORANGE

            answer_input.hint_text = feedback
            answer_input.value = ""
            answer_input.width = max(180, len(feedback) * 9)
            page.update()

        answer_input.on_submit = check_answer

        enter_icon = ft.IconButton(
            icon=ft.Icons.KEYBOARD_RETURN,
            icon_color="#4E426D",
            on_click=check_answer,
            tooltip="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç",
        )

        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –û–±—ä—ë–º –º–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω–∏–∫–æ–≤",
                                size=12, weight=ft.FontWeight.BOLD),
                        ft.Row(
                            controls=[
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 1",
                                    on_click=show_tip3_mngg1,
                                    style=ft.ButtonStyle(color="black"), width=100),
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 2",
                                    on_click=show_tip3_mngg2,
                                    style=ft.ButtonStyle(color="black"), width=100),
                            ],
                            spacing=10
                        ),
                        ft.Row([
                            ft.Text("–ó–∞–¥–∞—á–∞ ‚Ññ1", size=24, weight=ft.FontWeight.BOLD),
                            checkmark
                        ], spacing=10),
                        ft.Text(
                            "–ù–∞–π–¥–∏—Ç–µ –æ–±—ä–µ–º –º–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω–∏–∫–∞, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–Ω–æ–≥–æ –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ (–≤—Å–µ –¥–≤—É–≥—Ä–∞–Ω–Ω—ã–µ —É–≥–ª—ã –ø—Ä—è–º—ã–µ).",
                            size=21,
                        ),
                        ft.Row(
                            controls=[
                                ft.Row(
                                    controls=[
                                        answer_input,
                                        enter_icon,
                                    ],
                                    spacing=10,
                                    alignment=ft.MainAxisAlignment.START,
                                ),
                                ft.TextButton(
                                    "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                                    on_click=show_tip3_mngg1_details0_2,
                                    style=ft.ButtonStyle(color="#4E426D")
                                ),
                            ],
                        ),
                    ],
                    spacing=10,
                    alignment=ft.MainAxisAlignment.START,
                ),
                ft.Column(
                    col={"sm": 9, "md": 5},
                    controls=[
                        ft.Container(height=20),
                        ft.Image(
                            src="assets/mng1.svg",
                            width=200,
                            height=200,
                        ),
                        ft.Container(height=10),
                        ft.Row(
                            controls=[
                                ft.ElevatedButton(
                                    "–û—Ç–∫—Ä—ã—Ç—å 3d –º–æ–¥–µ–ª—å",
                                    on_click=handle_open_model,
                                    style=ft.ButtonStyle(color="#4E426D"),


                                    width=180
                                ),
                                theme_menu,
                            ],
                            spacing=5,
                            alignment=ft.MainAxisAlignment.CENTER,
                        ),
                    ],
                    spacing=0,
                    horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                ),
            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip3_mngg2(e):
        details0.content = None
        page.update()

        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –û–±—ä—ë–º –º–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω–∏–∫–æ–≤",
                                size=12, weight=ft.FontWeight.BOLD),

                        ft.Text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å —ç—Ç–∞ –∑–∞–¥–∞—á–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", size=24, weight=ft.FontWeight.BOLD),
                    ]
                ),

            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip3_vprizm1_details0_2(e):
        global show_solution
        responsive_row = details0.content
        first_column = None
        for control in responsive_row.controls:
            if isinstance(control, ft.Column) and control.col.get("md") == 7:
                first_column = control
                break

        if show_solution:
            if len(first_column.controls) > 4:
                first_column.controls.pop()
            show_solution = False
            e.control.text = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
        else:
            solution_content = ft.Column(
                controls=[
                    ft.Text("–†–µ—à–µ–Ω–∏–µ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text(
                        "–û–±—ä–µ–º –ø—Ä—è–º–æ–π –ø—Ä–∏–∑–º—ã —Ä–∞–≤–µ–Ω V = Sh, –≥–¥–µ S‚ÄØ‚ÄØ‚Äî –ø–ª–æ—â–∞–¥—å –æ—Å–Ω–æ–≤–∞–Ω–∏—è, \n–∞ h‚ÄØ‚ÄØ‚Äî –±–æ–∫–æ–≤–æ–µ —Ä–µ–±—Ä–æ. –ü–ª–æ—â–∞–¥—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —à–µ—Å—Ç–∏—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–æ–π a, –ª–µ–∂–∞—â–µ–≥–æ –≤ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏, –∑–∞–¥–∞–µ—Ç—Å—è —Ñ–æ—Ä–º—É–ª–æ–π",
                        size=18),
                    ft.Row(
                        controls=[
                            ft.Text("S = ", size=18),
                            ft.Column(
                                controls=[
                                    ft.Text(" 3‚àö3 ", size=18),
                                    ft.Container(width=50, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("  2 ", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text("√ó a¬≤ = ", size=18),
                            ft.Column(
                                controls=[
                                    ft.Text(" 3‚àö3 ", size=18),
                                    ft.Container(width=50, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("  2 ", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text("√ó 1¬≤ = ", size=18),
                            ft.Column(
                                controls=[
                                    ft.Text(" 3‚àö3 ", size=18),
                                    ft.Container(width=50, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("  2 ", size=18),
                                ],
                                spacing=0,
                            ),
                        ],
                        spacing=0,
                    ),
                    ft.Row(
                        controls=[
                            ft.Text("–¢–æ–≥–¥–∞ V –ø—Ä–∏–∑–º—ã = Sh = ", size=18),
                            ft.Column(
                                controls=[
                                    ft.Text(" 3‚àö3 ", size=18),
                                    ft.Container(width=50, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("  2 ", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text("√ó ‚àö3 = 4,5.", size=18),
                        ],
                        spacing=0,
                    ),
                    ft.Text("–û—Ç–≤–µ—Ç: 4,5", size=18, weight=ft.FontWeight.BOLD),
                ],
                spacing=5,
            )

            first_column.controls.append(solution_content)
            show_solution = True
            e.control.text = "–°–ø—Ä—è—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"

        page.update()

    def show_tip3_vprizm1(e):
        details0.content = None
        page.update()

        global show_solution
        show_solution = False
        def update_checkmark(task_id, is_solved=None):
            if is_solved is None:
                is_solved = is_task_solved(task_id)
            pass
        checkmark = ft.Icon(
            name=ft.Icons.CHECK_CIRCLE_OUTLINE,
            color=ft.Colors.GREEN if is_task_solved("tip3_vprizm1") else ft.Colors.GREY,
            size=24
        )

        answer_input = ft.TextField(
            hint_text="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç",
            width=180,
            border_color="#4E426D",
            cursor_color="#4E426D",
            text_size=14,
            border_radius=20,
            content_padding=10,
            expand=True,
        )

        def check_answer(e):

            user_answer = answer_input.value.strip().replace(',', '.')
            try:
                num = float(user_answer)
                if num == 4.5:
                    feedback = f"–ú–æ–ª–æ–¥–µ—Ü! –û—Ç–≤–µ—Ç {num} –≤–µ—Ä–Ω—ã–π! üéâ"
                    answer_input.border_color = ft.Colors.GREEN
                    add_solved_task("tip3_vprizm1")
                    update_checkmark("tip3_vprizm1", True)
                else:
                    feedback = f"–û—Ç–≤–µ—Ç {num} –Ω–µ–≤–µ—Ä–Ω—ã–π. ‚ùå"
                    answer_input.border_color = ft.Colors.RED
            except ValueError:
                feedback = "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ! ‚ö†Ô∏è"
                answer_input.border_color = ft.Colors.ORANGE

            answer_input.hint_text = feedback
            answer_input.value = ""
            answer_input.width = max(180, len(feedback) * 9)
            page.update()

        answer_input.on_submit = check_answer

        enter_icon = ft.IconButton(
            icon=ft.Icons.KEYBOARD_RETURN,
            icon_color="#4E426D",
            on_click=check_answer,
            tooltip="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç",
        )

        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –û–±—ä—ë–º –ø—Ä–∏–∑–º—ã",
                                size=12, weight=ft.FontWeight.BOLD),
                        ft.Row(
                            controls=[
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 1",
                                    on_click=show_tip3_vprizm1,
                                    style=ft.ButtonStyle(color="black"), width=100),
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 2",
                                    on_click=show_tip3_vprizm2,
                                    style=ft.ButtonStyle(color="black"), width=100),
                            ],
                            spacing=10
                        ),
                        ft.Row([
                            ft.Text("–ó–∞–¥–∞—á–∞ ‚Ññ1", size=24, weight=ft.FontWeight.BOLD),
                            checkmark
                        ], spacing=10),
                        ft.Text(
                            "–ù–∞–π–¥–∏—Ç–µ –æ–±—ä–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —à–µ—Å—Ç–∏—É–≥–æ–ª—å–Ω–æ–π –ø—Ä–∏–∑–º—ã, —Å—Ç–æ—Ä–æ–Ω—ã –æ—Å–Ω–æ–≤–∞–Ω–∏—è –∫–æ—Ç–æ—Ä–æ–π —Ä–∞–≤–Ω—ã 1, –∞ –±–æ–∫–æ–≤—ã–µ —Ä–µ–±—Ä–∞ —Ä–∞–≤–Ω—ã ‚àö3",
                            size=21,
                        ),
                        ft.Row(
                            controls=[
                                ft.Row(
                                    controls=[
                                        answer_input,
                                        enter_icon,
                                    ],
                                    spacing=10,
                                    alignment=ft.MainAxisAlignment.START,
                                ),
                                ft.TextButton(
                                    "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                                    on_click=show_tip3_vprizm1_details0_2,
                                    style=ft.ButtonStyle(color="#4E426D")
                                ),
                            ],
                        ),
                    ],
                    spacing=10,
                    alignment=ft.MainAxisAlignment.START,
                ),
                ft.Column(
                    col={"sm": 9, "md": 5},
                    controls=[
                        ft.Container(height=20),
                        ft.Image(
                            src="assets/sprizm1(2).svg",
                            width=180,
                            height=180,
                        ),
                        ft.ElevatedButton(
                            "–û—Ç–∫—Ä—ã—Ç—å 3d –º–æ–¥–µ–ª—å",
                            on_click=lambda e: start_pygame_with_figure(hexagonal_prism, 20),
                            style=ft.ButtonStyle(color="#4E426D")
                        ),
                    ],
                    spacing=15,
                    horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                ),
            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip3_vprizm2(e):
        details0.content = None
        page.update()
        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –û–±—ä—ë–º –ø—Ä–∏–∑–º—ã",
                                size=12, weight=ft.FontWeight.BOLD),

                        ft.Text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å —ç—Ç–∞ –∑–∞–¥–∞—á–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", size=24, weight=ft.FontWeight.BOLD),
                    ]
                ),

            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip3_sprizm1_details0_2(e):
        global show_solution
        responsive_row = details0.content
        first_column = None
        for control in responsive_row.controls:
            if isinstance(control, ft.Column) and control.col.get("md") == 7:
                first_column = control
                break

        if show_solution:
            if len(first_column.controls) > 4:
                first_column.controls.pop()
            show_solution = False
            e.control.text = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
        else:
            solution_content = ft.Column(
                controls=[
                    ft.Text("–†–µ—à–µ–Ω–∏–µ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–ü–ª–æ—â–∞–¥—å –±–æ–∫–æ–≤–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ø—Ä–∏–∑–º—ã —Ä–∞–≤–Ω–∞ —Å—É–º–º–µ –ø–ª–æ—â–∞–¥–µ–π –≤—Å–µ—Ö –µ–µ –±–æ–∫–æ–≤—ã—Ö –≥—Ä–∞–Ω–µ–π:", size=18),
                    ft.Row(
                        controls=[
                            ft.Text("S(–±.–ø) = 6S(–≥—Ä.) = 6√ó5√ó10 = 300.", size=17),
                        ],
                        spacing=-10,
                    ),
                    ft.Text("–û—Ç–≤–µ—Ç: 300", size=18, weight=ft.FontWeight.BOLD),
                ],
                spacing=5,
            )
            first_column.controls.append(solution_content)
            show_solution = True
            e.control.text = "–°–ø—Ä—è—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"

        page.update()

    def show_tip3_sprizm1(e):
        details0.content = None
        page.update()

        global show_solution
        show_solution = False
        def update_checkmark(task_id, is_solved=None):
            if is_solved is None:
                is_solved = is_task_solved(task_id)
            pass
        checkmark = ft.Icon(
            name=ft.Icons.CHECK_CIRCLE_OUTLINE,
            color=ft.Colors.GREEN if is_task_solved("tip3_sprizm1") else ft.Colors.GREY,
            size=24
        )
        answer_input = ft.TextField(
            hint_text="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç",
            width=180,
            border_color="#4E426D",
            cursor_color="#4E426D",
            text_size=14,
            border_radius=20,
            content_padding=10,
            expand=True,
        )

        def check_answer(e):

            user_answer = answer_input.value.strip().replace(',', '.')
            try:
                num = int(user_answer)
                if num == 300:
                    feedback = f"–ú–æ–ª–æ–¥–µ—Ü! –û—Ç–≤–µ—Ç {num} –≤–µ—Ä–Ω—ã–π! üéâ"
                    answer_input.border_color = ft.Colors.GREEN
                    add_solved_task("tip3_sprizm1")
                    update_checkmark("tip3_sprizm1", True)
                else:
                    feedback = f"–û—Ç–≤–µ—Ç {num} –Ω–µ–≤–µ—Ä–Ω—ã–π. ‚ùå"
                    answer_input.border_color = ft.Colors.RED
            except ValueError:
                feedback = "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ! ‚ö†Ô∏è"
                answer_input.border_color = ft.Colors.ORANGE

            answer_input.hint_text = feedback
            answer_input.value = ""
            answer_input.width = max(180, len(feedback) * 9)
            page.update()

        answer_input.on_submit = check_answer

        enter_icon = ft.IconButton(
            icon=ft.Icons.KEYBOARD_RETURN,
            icon_color="#4E426D",
            on_click=check_answer,
            tooltip="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç",
        )
        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –ü–ª–æ—â–∞–¥—å –±–æ–∫–æ–≤–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ø—Ä–∏–∑–º—ã",
                                size=12, weight=ft.FontWeight.BOLD),
                        ft.Row(
                            controls=[
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 1",
                                    on_click=show_tip3_sprizm1,
                                    style=ft.ButtonStyle(color="black"), width=100),
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 2",
                                    on_click=show_tip3_sprizm2,
                                    style=ft.ButtonStyle(color="black"), width=100),
                            ],
                            spacing=10
                        ),
                        ft.Row([
                            ft.Text("–ó–∞–¥–∞—á–∞ ‚Ññ1", size=24, weight=ft.FontWeight.BOLD),
                            checkmark
                        ], spacing=10),
                        ft.Text(
                            "–ù–∞–π–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –±–æ–∫–æ–≤–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —à–µ—Å—Ç–∏—É–≥–æ–ª—å–Ω–æ–π –ø—Ä–∏–∑–º—ã, —Å—Ç–æ—Ä–æ–Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –∫–æ—Ç–æ—Ä–æ–π —Ä–∞–≤–Ω–∞ 5, –∞ –≤—ã—Å–æ—Ç–∞ ‚Äî 10.",
                            size=21,
                        ),
                        ft.Row(
                            controls=[
                                ft.Row(
                                    controls=[
                                        answer_input,
                                        enter_icon,
                                    ],
                                    spacing=10,
                                    alignment=ft.MainAxisAlignment.START,
                                ),
                                ft.TextButton(
                                    "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                                    on_click=show_tip3_sprizm1_details0_2,
                                    style=ft.ButtonStyle(color="#4E426D")
                                ),
                            ],
                        ),
                    ],
                    spacing=10,
                    alignment=ft.MainAxisAlignment.START,
                ),
                ft.Column(
                    col={"sm": 9, "md": 5},
                    controls=[
                        ft.Container(height=20),
                        ft.Image(
                            src="assets/sprizm1(2).svg",
                            width=180,
                            height=180,
                        ),
                        ft.ElevatedButton(
                            "–û—Ç–∫—Ä—ã—Ç—å 3d –º–æ–¥–µ–ª—å",
                            on_click=lambda e: start_pygame_with_figure(hexagonal_prism, 20),
                            style=ft.ButtonStyle(color="#4E426D")
                        ),
                    ],
                    spacing=15,
                    horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                ),
            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip3_sprizm2(e):
        details0.content = None
        page.update()
        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –ü–ª–æ—â–∏–¥—å –ø—Ä–∏–∑–º—ã",
                                size=12, weight=ft.FontWeight.BOLD),

                        ft.Text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å —ç—Ç–∞ –∑–∞–¥–∞—á–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", size=24, weight=ft.FontWeight.BOLD),
                    ]
                ),

            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip3_cyli(e):
        details0.content = None
        page.update()
        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –¶–∏–ª–∏–Ω–¥—Ä (–ø–ª–æ—â–∞–¥—å)",
                                size=12, weight=ft.FontWeight.BOLD),

                        ft.Text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å —ç—Ç–∏ –∑–∞–¥–∞—á–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", size=24, weight=ft.FontWeight.BOLD),
                    ]
                ),

            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip3_sphere(e):
        details0.content = None
        page.update()

        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è: –°—Ñ–µ—Ä–∞ –∏ —à–∞—Ä",
                                size=12, weight=ft.FontWeight.BOLD),

                        ft.Text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å —ç—Ç–∏ –∑–∞–¥–∞—á–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", size=24, weight=ft.FontWeight.BOLD),
                    ]
                ),

            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()




    def show_tip14_rast1_details0_2(e):
        global show_solution
        responsive_row = details0.content
        first_column = None
        for control in responsive_row.controls:
            if isinstance(control, ft.Column) and control.col.get("md") == 7:
                first_column = control
                break
        if show_solution:
            if len(first_column.controls) > 4:
                first_column.controls.pop()
            show_solution = False
            e.control.text = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
        else:

            solution_content = ft.Column(
                controls=[
                    ft.Text("–î–∞–Ω–æ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("ABCDA‚ÇÅB‚ÇÅC‚ÇÅD‚ÇÅ ‚Äî –∫—É–±; AA‚ÇÅ = 1", size=18),
                    ft.Text("a) –î–æ–∫-—Ç—å: BD‚ÇÅ ‚ä• AC", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–±) –ù–∞–π—Ç–∏: œÅ(C; BD‚ÇÅ)", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–†–µ—à–µ–Ω–∏–µ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text(
                        "–∞) –ü—Ä–æ–µ–∫—Ü–∏—è BD‚ÇÅ –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç—å ABCD ‚Äî —ç—Ç–æ –ø—Ä—è–º–∞—è BD. BD ‚ä• AC (–¥–∏–∞–≥–æ–Ω–∞–ª–∏ –∫–≤–∞–¥—Ä–∞—Ç–∞),\n–ø–æ—ç—Ç–æ–º—É, –ø–æ —Ç–µ–æ—Ä–µ–º–µ –æ —Ç—Ä–µ—Ö –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–∞—Ö, BD‚ÇÅ ‚ä• AC",
                        size=18),
                    ft.Text("–±) –ü—Ä–æ–≤–µ–¥–µ–º –æ—Ç—Ä–µ–∑–æ–∫ CD‚ÇÅ –∏ –æ–ø—É—Å—Ç–∏–º –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä CH –Ω–∞ BD‚ÇÅ.", size=18),
                    ft.Text("–ò—Å–∫–æ–º–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ —Ä–∞–≤–Ω–æ –≤—ã—Å–æ—Ç–µ CH –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ BCD‚ÇÅ —Å –ø—Ä—è–º—ã–º —É–≥–ª–æ–º C:",
                            size=18),
                    ft.Row(
                        [
                            ft.Text("CH = ", size=18),
                            ft.Column(
                                [
                                    ft.Text("2S(BCD‚ÇÅ)", size=18),
                                    ft.Container(width=71, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("BD", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" = ", size=18),
                            ft.Column(
                                [
                                    ft.Text("CD‚ÇÅ √ó BC", size=18),
                                    ft.Container(width=74, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("BD‚ÇÅ", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" = ", size=18),
                            ft.Column(
                                [
                                    ft.Text("‚àö2", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("‚àö3", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" = ", size=18),
                            ft.Column(
                                [
                                    ft.Text("‚àö6", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("3", size=18),
                                ],
                                spacing=0,
                            )
                        ],
                        spacing=0,
                    ),
                    ft.Row(
                        [
                            ft.Text("–û—Ç–≤–µ—Ç: ", size=18, weight=ft.FontWeight.BOLD),
                            ft.Column(
                                [
                                    ft.Text("‚àö6", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("3", size=18),
                                ],
                                spacing=0,
                            )
                        ],
                        spacing=0,
                    ),
                ],
                spacing=5,
            )

            first_column.controls.append(solution_content)
            show_solution = True
            e.control.text = "–°–ø—Ä—è—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"

        page.update()

    def show_tip14_rast(e):
        details0.content = None
        page.update()

        global show_solution
        show_solution = False

        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 14. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –†–∞—Å—Å—Ç–æ—è–Ω–∏—è",
                                size=12, weight=ft.FontWeight.BOLD),
                        ft.Row(
                            controls=[
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 1",
                                    on_click=show_tip14_rast,
                                    style=ft.ButtonStyle(color="black"),
                                    width=100),
                                ft.OutlinedButton(
                                    "–ó–∞–¥–∞—á–∞ 2",
                                    on_click=show_tip14_rast2,
                                    style=ft.ButtonStyle(color="black"),
                                    width=100),

                            ],
                            spacing=10
                        ),
                        ft.Text("–ó–∞–¥–∞—á–∞ ‚Ññ1", size=24, weight=ft.FontWeight.BOLD),
                        ft.Column([
                            ft.Text("–í –∫—É–±–µ ABCDA‚ÇÅB‚ÇÅC‚ÇÅD‚ÇÅ –≤—Å–µ —Ä–µ–±—Ä–∞ —Ä–∞–≤–Ω—ã 1.", size=20),
                            ft.Text("a) –î–æ–∫–∞–∂–∏—Ç–µ, —á—Ç–æ BD‚ÇÅ ‚ä• AC", size=20),
                            ft.Text("–±) –ù–∞–π–¥–∏—Ç–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç —Ç–æ—á–∫–∏ C –¥–æ –ø—Ä—è–º–æ–π BD‚ÇÅ.", size=20),
                        ], spacing=3),
                        ft.Row(
                            controls=[

                                ft.TextButton(
                                    "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                                    on_click=show_tip14_rast1_details0_2,
                                    style=ft.ButtonStyle(color="#4E426D"))
                            ],
                        ),
                    ],
                    spacing=10,
                    alignment=ft.MainAxisAlignment.START,
                ),
                ft.Column(
                    col={"sm": 9, "md": 5},
                    controls=[
                        ft.Container(height=5),
                        ft.Image(
                            src="assets/14–∫rast2.jpg",
                            width=260,
                            height=260,
                        ),
                        ft.ElevatedButton(
                            "–û—Ç–∫—Ä—ã—Ç—å 3d –º–æ–¥–µ–ª—å",
                            on_click=lambda e: start_pygame_with_rast1(e),
                            style=ft.ButtonStyle(color="#4E426D")
                        ),
                    ],
                    spacing=15,
                    horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                ),
            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_tip14_rast2_details0_2(e):
        global show_solution
        if show_solution:
            details0.content.controls[0].controls[0].controls = [
                ctrl for ctrl in details0.content.controls[0].controls[0].controls
                if not isinstance(ctrl, ft.Column) or "solution_content" not in getattr(ctrl, "id", "")
            ]
            show_solution = False
            e.control.text = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
        else:
            solution_content = ft.Column(
                [
                    ft.Text("–î–∞–Ω–æ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("ABCD ‚Äî —Ç—ç—Ç—Ä–∞—ç–¥—Ä; AA‚ÇÅ = 1, ", size=18),
                    ft.Text("DE = EC, ", size=18),
                    ft.Text("a) –î–æ–∫-—Ç—å: (ABE) ‚ä• CD ", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–±) –ù–∞–π—Ç–∏: œÅ(A; BE)  ", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–†–µ—à–µ–Ω–∏–µ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text(
                        "a) BE ‚Äî –≤—ã—Å–æ—Ç–∞ —Ä–∞–≤–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ BCD. AE ‚Äî –≤—ã—Å–æ—Ç–∞ —Ä–∞–≤–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ ACD",
                        size=18),
                    ft.Text(
                        "–ü–æ¬≠—ç—Ç–æ¬≠–º—É BE ‚ä• CD –∏ AE ‚ä• CD. –ó–Ω–∞¬≠—á–∏—Ç, –ø–æ –ø—Ä–∏¬≠–∑–Ω–∞¬≠–∫—É –ø–µ—Ä¬≠–ø–µ–Ω¬≠–¥–∏¬≠–∫—É¬≠–ª—è—Ä¬≠–Ω–æ¬≠—Å—Ç–∏ –ø—Ä—è¬≠–º–æ–π –∏ –ø–ª–æ—Å¬≠–∫–æ¬≠—Å—Ç–∏, (ABE) ‚ä• CD.",
                        size=18),
                    ft.Text(
                        "–±)–†–∞—Å¬≠—Å–º–æ—Ç¬≠—Ä–∏–º —Ç—Ä–µ¬≠—É–≥–æ–ª—å¬≠–Ω–∏–∫ AEB –∏ –µ–≥–æ –≤—ã¬≠—Å–æ¬≠—Ç—ã AH –∏ EM. –°–æ¬≠—Å—Ç–∞¬≠–≤–∏–º —Ä–∞¬≠–≤–µ–Ω¬≠—Å—Ç–≤–æ: AH √ó BE = EM √ó AB. \n –ó–∞¬≠–º–µ¬≠—Ç–∏–º —Ç–µ¬≠–ø–µ—Ä—å, —á—Ç–æ —Ç—Ä–µ¬≠—É–≥–æ–ª—å¬≠–Ω–∏–∫ AEB —Ä–∞–≤¬≠–Ω–æ¬≠–±–µ–¥¬≠—Ä–µ–Ω¬≠–Ω—ã–π",
                        size=18),
                    ft.Row(
                        [
                            ft.Text("–∏ AE = EB =  ", size=18),
                            ft.Column(
                                [
                                    ft.Text("‚àö3 ", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 2 ", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text(", –ø–æ—ç—Ç–æ–º—É EM = ‚àö(  ", size=18),
                            ft.Column(
                                [
                                    ft.Text(" 3", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 4", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" - ", size=18),
                            ft.Column(
                                [
                                    ft.Text(" 1", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 2 ", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text(") = ", size=18),
                            ft.Column(
                                [
                                    ft.Text("‚àö2", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 2", size=18),
                                ],
                                spacing=0,
                            )
                        ],
                        spacing=0,
                    ),
                    ft.Row(
                        [
                            ft.Text("–¢–æ–≥–¥–∞ AH = ", size=18),
                            ft.Column(
                                [
                                    ft.Text("EM √ó AB", size=18),
                                    ft.Container(width=71, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("    BE ", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" = ", size=18),
                            ft.Column(
                                [
                                    ft.Text("‚àö2", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 2", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" √ó 1 √ó ", size=18),
                            ft.Column(
                                [
                                    ft.Text(" 2 ", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("‚àö3", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" = ", size=18),
                            ft.Column(
                                [
                                    ft.Text("‚àö6", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 3 ", size=18),
                                ],
                                spacing=0,
                            )
                        ],
                        spacing=0,
                    ),
                    ft.Row(
                        [
                            ft.Text("–û—Ç–≤–µ—Ç: ", size=18, weight=ft.FontWeight.BOLD),
                            ft.Column(
                                [
                                    ft.Text("‚àö6", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 3 ", size=18),
                                ],
                                spacing=0,
                            )
                        ],
                        spacing=0,
                    ),
                ],
                spacing=5,
            )

            main_column = details0.content.controls[0].controls[0]
            main_column.controls.append(solution_content)
            show_solution = True
            e.control.text = "–°–ø—Ä—è—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"

        page.update()

    def show_tip14_rast2(e):
        details0.content = None
        page.update()

        global show_solution
        show_solution = False

        details0.content = ft.Column(
            scroll=ft.ScrollMode.AUTO,
            controls=[
                ft.ResponsiveRow(
                    controls=[
                        ft.Column(
                            col={"sm": 12, "md": 7},
                            controls=[
                                ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 14. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –†–∞—Å—Å—Ç–æ—è–Ω–∏—è",
                                        size=12, weight=ft.FontWeight.BOLD),
                                ft.Row(
                                    controls=[
                                        ft.OutlinedButton(
                                            "–ó–∞–¥–∞—á–∞ 1",
                                            on_click=show_tip14_rast,
                                            style=ft.ButtonStyle(color="black"),
                                            width=100),
                                        ft.OutlinedButton(
                                            "–ó–∞–¥–∞—á–∞ 2",
                                            on_click=show_tip14_rast2,
                                            style=ft.ButtonStyle(color="black"),
                                            width=100),

                                    ],
                                    spacing=10
                                ),
                                ft.Text("–ó–∞–¥–∞—á–∞ ‚Ññ2", size=24, weight=ft.FontWeight.BOLD),
                                ft.Column([
                                    ft.Text(
                                        "–í —Ç–µ—Ç—Ä–∞—ç–¥—Ä–µ ABCD, –≤—Å–µ —Ä—ë–±—Ä–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ä–∞–≤–Ω—ã 1, –æ—Ç–º–µ—Ç–∏–ª–∏ —Å–µ—Ä–µ–¥–∏–Ω—É —Ä–µ–±—Ä–∞ CD ‚Äî —Ç–æ—á–∫—É E.",
                                        size=20),
                                    ft.Text("a) –î–æ–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –ø–ª–æ—Å–∫–æ—Å—Ç—å ABE –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–∞ —Ä–µ–±—Ä—É CD", size=20),
                                    ft.Text("–±) –ù–∞–π–¥–∏—Ç–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç —Ç–æ—á–∫–∏ A –¥–æ –ø—Ä—è–º–æ–π BE.", size=20),
                                ], spacing=3),
                                ft.Row(
                                    controls=[

                                        ft.TextButton(
                                            "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                                            on_click=show_tip14_rast2_details0_2,
                                            style=ft.ButtonStyle(color="#4E426D")
                                        ),
                                    ],
                                    alignment=ft.MainAxisAlignment.SPACE_BETWEEN,
                                ),
                            ],
                            spacing=10,
                            alignment=ft.MainAxisAlignment.START,
                        ),
                        ft.Column(
                            col={"sm": 12, "md": 5},
                            controls=[
                                ft.Container(
                                    content=ft.Image(
                                        src="assets/—Ä–∞—Å—Ç2.jpg",
                                        width=300,
                                        height=300,
                                        fit=ft.ImageFit.CONTAIN
                                    ),
                                    padding=10,
                                    alignment=ft.alignment.center
                                ),
                                ft.ElevatedButton(
                                    "–û—Ç–∫—Ä—ã—Ç—å 3d –º–æ–¥–µ–ª—å",
                                    on_click=lambda e: start_pygame_with_rast2(e),
                                    style=ft.ButtonStyle(color="#4E426D")
                                ),
                            ],
                            spacing=15,
                            horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                        ),
                    ],
                    spacing=20,
                    vertical_alignment=ft.CrossAxisAlignment.START,
                )
            ]
        )
        page.update()

    def show_tip14_ygol1_details0_2(e):
        global show_solution
        main_column = details0.content.controls[0].controls[0]
        solution_index = None
        for i, ctrl in enumerate(main_column.controls):
            if hasattr(ctrl, "id") and ctrl.id == "solution_content":
                solution_index = i
                break

        if show_solution:

            if solution_index is not None:
                main_column.controls.pop(solution_index)
            show_solution = False
            e.control.text = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
        else:

            solution_content = ft.Column(
                [
                    ft.Text("–î–∞–Ω–æ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text(
                        "ABCA‚ÇÅB‚ÇÅC‚ÇÅ ‚Äî –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∞—è –ø—Ä–∏–∑–º–∞ ABCA‚ÇÅB‚ÇÅC‚ÇÅ;\nACB = 2 ; –¥–∏–∞–≥–æ–Ω–∞–ª—å –±–æ–∫–æ–≤–æ–π –≥—Ä–∞–Ω–∏ = ‚àö5.",
                        size=18),
                    ft.Text("a) –î–æ–∫-—Ç—å: V(A‚ÇÅBCC‚ÇÅB‚ÇÅ) = 2V(AA‚ÇÅBC)", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–±) –ù–∞–π—Ç–∏: ‚à†(A‚ÇÅBC;ACB)  ", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–†–µ—à–µ–Ω–∏–µ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("a)–ü—É—Å—Ç—å S ‚Äî –ø–ª–æ—â–∞–¥—å –æ—Å–Ω–æ–≤–∞–Ω–∏—è –ø—Ä–∏–∑–º—ã, –∞ h ‚Äî –µ—ë –≤—ã—Å–æ—Ç–∞. –¢–æ–≥–¥–∞ V –ø—Ä–∏–∑–º—ã —Ä–∞–≤–µ–Ω Sh,",
                            size=18),
                    ft.Row(
                        [
                            ft.Text("–∞ V(AA‚ÇÅBC) ", size=18),
                            ft.Column(
                                [
                                    ft.Text(" 1 ", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 3 ", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" Sh. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, V(A‚ÇÅBCC‚ÇÅB‚ÇÅ) = Sh - ", size=18),
                            ft.Column(
                                [
                                    ft.Text(" 1 ", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 3 ", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" Sh = ", size=18),
                            ft.Column(
                                [
                                    ft.Text(" 2 ", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 3 ", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" Sh = 2V(AA‚ÇÅBC). –ß.–¢.–î.", size=18),
                        ],
                        spacing=0,

                    ),
                    ft.Text(
                        "–±)–û–±–æ–∑–Ω–∞—á–∏–º H —Å–µ—Ä–µ–¥–∏–Ω—É —Ä–µ–±—Ä–∞ BC. –¢.–∫. —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ ABC —Ä–∞–≤–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π, –∞ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ \nA‚ÇÅBC ‚Äî —Ä–∞–≤–Ω–æ–±–µ–¥—Ä–µ–Ω–Ω—ã–π, AH ‚ä• A‚ÇÅH. –°–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, ‚à†A‚ÇÅHA ‚Äî –ª–∏–Ω–µ–π–Ω—ã–π —É–≥–æ–ª –¥–≤—É–≥—Ä–∞–Ω–Ω–æ–≥–æ —É–≥–ª–∞ \n—Å –≥—Ä–∞–Ω—è–º–∏ BCA –∏ BCA‚ÇÅ –ò–∑ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ A‚ÇÅAB –Ω–∞–π–¥–µ–º A‚ÇÅA = ‚àö(5 - 4) = 1 –í —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–µ AHB –Ω–∞–π–¥–µ–º",
                        size=18),
                    ft.Row(
                        [
                            ft.Text("–≤—ã—Å–æ—Ç—É AH = ‚àö(4 - 1) = ‚àö3. –ò–∑ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ HAA‚ÇÅ –Ω–∞–π–¥–µ–º: tg‚à†A‚ÇÅHA = ", size=18),
                            ft.Column(
                                [
                                    ft.Text("AA‚ÇÅ", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("AH", size=18),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" = ", size=18),
                            ft.Column(
                                [
                                    ft.Text(" 1 ", size=18),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("‚àö3", size=18),
                                ],
                                spacing=0,
                            ),

                        ],
                        spacing=0,

                    ),
                    ft.Text(" –ò—Å–∫–æ–º—ã–π —É–≥–æ–ª = 30¬∞", size=18),
                    ft.Row(
                        [
                            ft.Text("–û—Ç–≤–µ—Ç: 30¬∞ ", size=18, weight=ft.FontWeight.BOLD),
                        ],
                        spacing=0,
                    ),
                ],
                spacing=5,
            )
            solution_content.id = "solution_content"
            main_column.controls.append(solution_content)
            show_solution = True
            e.control.text = "–°–ø—Ä—è—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"

        page.update()

    def show_tip14_ygol1(e):

        details0.content = None
        page.update()

        global show_solution
        show_solution = False
        global light_theme_checked, dark_theme_checked
        light_theme_checked = False
        dark_theme_checked = False

        def check_item_clicked(e, theme_type):
            global light_theme_checked, dark_theme_checked

            if theme_type == "light":
                light_theme_checked = not light_theme_checked
                if light_theme_checked:
                    dark_theme_checked = False
            else:
                dark_theme_checked = not dark_theme_checked
                if dark_theme_checked:
                    light_theme_checked = False

            for item in theme_menu.items:
                if item.text == "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞":
                    item.checked = light_theme_checked
                elif item.text == "–¢–µ–º–Ω–∞—è —Ç–µ–º–∞":
                    item.checked = dark_theme_checked
            theme_menu.update()

        def handle_open_model(e):
            if light_theme_checked:
                start_pygame_with_ygol1_sv(e)
            elif dark_theme_checked:
                start_pygame_with_ygol1(e)
            else:
                start_pygame_with_ygol1_sv(e)

        theme_menu = ft.PopupMenuButton(
            items=[
                ft.PopupMenuItem(
                    text="–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞",
                    checked=False,
                    on_click=lambda e: check_item_clicked(e, "light"),

                ),
                ft.PopupMenuItem(
                    text="–¢–µ–º–Ω–∞—è —Ç–µ–º–∞",
                    checked=False,
                    on_click=lambda e: check_item_clicked(e, "dark"),

                ),
            ],
            icon=ft.Icons.MORE_VERT, style=ft.ButtonStyle(color="#4E426D"),
            tooltip="–í—ã–±–æ—Ä —Ç–µ–º—ã"
        )

        details0.content = ft.Column(
            scroll=ft.ScrollMode.AUTO,
            controls=[
                ft.Row(
                    [
                        ft.Column(
                            [
                                ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 14. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –£–≥–ª—ã",
                                        size=12, weight=ft.FontWeight.BOLD),
                                ft.Row(
                                    [
                                        ft.OutlinedButton("–ó–∞–¥–∞—á–∞ 1", on_click=show_tip14_ygol1,
                                                          style=ft.ButtonStyle(color="black"),
                                                          width=100),
                                        ft.OutlinedButton("–ó–∞–¥–∞—á–∞ 2", on_click=show_tip14_ygol2,
                                                          style=ft.ButtonStyle(color="black"),
                                                          width=100),
                                    ],
                                    spacing=10,
                                ),
                                ft.Text("–ó–∞–¥–∞—á–∞ ‚Ññ1", size=24, weight=ft.FontWeight.BOLD),
                                ft.Column([
                                    ft.Text(
                                        "–°—Ç–æ—Ä–æ–Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–æ–π –ø—Ä–∏–∑–º—ã ABCA‚ÇÅB‚ÇÅC‚ÇÅ —Ä–∞–≤–Ω–∞ 2, –∞ –¥–∏–∞–≥–æ–Ω–∞–ª—å –±–æ–∫–æ–≤–æ–π –≥—Ä–∞–Ω–∏ —Ä–∞–≤–Ω–∞ ‚àö5. \n–∞)–î–æ–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –æ–±—ä–µ–º –ø–∏—Ä–∞–º–∏–¥—ã A‚ÇÅBCC‚ÇÅB‚ÇÅ –≤–¥–≤–æ–µ –±–æ–ª—å—à–µ –æ–±—ä–µ–º–∞ –ø–∏—Ä–∞–º–∏–¥—ã AA‚ÇÅBC. \n–±)–ù–∞–π–¥–∏—Ç–µ —É–≥–æ–ª –º–µ–∂–¥—É –ø–ª–æ—Å–∫–æ—Å—Ç—å—é A‚ÇÅBC –∏ –ø–ª–æ—Å–∫–æ—Å—Ç—å—é –æ—Å–Ω–æ–≤–∞–Ω–∏—è –ø—Ä–∏–∑–º—ã.",
                                        size=18),
                                ], spacing=3),
                                ft.Row(
                                    [
                                        ft.TextButton(
                                            "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                                            on_click=show_tip14_ygol1_details0_2,
                                            style=ft.ButtonStyle(color="#4E426D")
                                        ),
                                    ],
                                    alignment=ft.MainAxisAlignment.START,
                                ),
                            ],
                            spacing=5,
                            expand=True,
                            alignment=ft.MainAxisAlignment.START,
                        ),
                        ft.Column(
                            [
                                ft.Image(
                                    src="assets/ygol.svg",
                                    width=250,
                                    height=250,
                                    fit=ft.ImageFit.CONTAIN
                                ),
                                ft.Row(
                                    controls=[
                                        ft.ElevatedButton(
                                            "–û—Ç–∫—Ä—ã—Ç—å 3d –º–æ–¥–µ–ª—å",
                                            on_click=handle_open_model,
                                            style=ft.ButtonStyle(color="#4E426D"),

                                            width=180
                                        ),
                                        theme_menu,
                                    ],
                                    spacing=5,
                                    alignment=ft.MainAxisAlignment.CENTER,
                                ),
                            ],
                            spacing=15,
                            alignment=ft.MainAxisAlignment.START,
                        ),
                    ],
                    spacing=20,
                    vertical_alignment=ft.CrossAxisAlignment.START,
                )
            ],
            alignment=ft.MainAxisAlignment.START,
        )
        page.update()

    def show_tip14_ygol2(e):
        details0.content = None
        page.update()
        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –£–≥–ª—ã",
                                size=12, weight=ft.FontWeight.BOLD),

                        ft.Text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å —ç—Ç–∞ –∑–∞–¥–∞—á–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", size=24, weight=ft.FontWeight.BOLD),
                    ]
                ),

            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()


    def show_tip14_V1_details0_2(e):
        global show_solution
        global solution_content

        main_column = details0.content.controls[0].controls[0]

        if show_solution:
            if hasattr(show_tip14_V1_details0_2, 'solution_content'):
                if show_tip14_V1_details0_2.solution_content in main_column.controls:
                    main_column.controls.remove(show_tip14_V1_details0_2.solution_content)
            show_solution = False
            e.control.text = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
        else:

            if not hasattr(show_tip14_V1_details0_2, 'solution_content'):
                show_tip14_V1_details0_2.solution_content = ft.Column(

                                    controls=[
                                        ft.Row([
                                            ft.Text("–î–∞–Ω–æ:", size=18, weight=ft.FontWeight.BOLD),
                                            ft.Text("‚ñ≥ABC –∏ ‚ñ≥MBC ‚Äî –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ; (ABC)‚ä•(MBC);", size=18)
                                        ]),
                                        ft.Text("BC = 8; MP = PC; BT‚ÄØ:‚ÄØTM‚ÄØ‚ÄØ=‚ÄØ‚ÄØ1‚ÄØ:‚ÄØ3.", size=18),
                                        ft.Text("a) –î–æ–∫-—Ç—å: CT > BP.", size=18, weight=ft.FontWeight.BOLD),
                                        ft.Text("–±) –ù–∞–π—Ç–∏: V–ø–∏—Ä.MRTA.", size=18, weight=ft.FontWeight.BOLD),
                                        ft.Text("–†–µ—à–µ–Ω–∏–µ:", size=18, weight=ft.FontWeight.BOLD),
                                        ft.Text(
                                            "–∞) ‚ÄØ‚ÄØ–ó–∞¬≠–º–µ¬≠—Ç–∏–º, —á—Ç–æ –≤ —Ç—Ä–µ¬≠—É–≥–æ–ª—å¬≠–Ω–∏¬≠–∫–∞—Ö TBC –∏ PCB —É–≥–ª—ã B –∏ –° —Ä–∞–≤–Ω—ã, —Å—Ç–æ¬≠—Ä–æ¬≠–Ω–∞ BC –æ–±—â–∞—è, –∏ BT –º–µ–Ω—å¬≠—à–µ CP. \n–¢–æ–≥–¥–∞, –∑–∞¬≠–ø–∏¬≠—Å—ã¬≠–≤–∞—è —Ç–µ–æ¬≠—Ä–µ¬≠–º—É –∫–æ¬≠—Å–∏¬≠–Ω—É¬≠—Å–æ–≤ –¥–ª—è —Å—Ç–æ¬≠—Ä–æ–Ω CT –∏ BP —ç—Ç–∏—Ö —Ç—Ä–µ¬≠—É–≥–æ–ª—å¬≠–Ω–∏¬≠–∫–æ–≤, –ø–æ¬≠–ª—É¬≠—á–∞¬≠–µ–º –∏—Å¬≠–∫–æ¬≠–º–æ–µ –Ω–µ¬≠—Ä–∞¬≠–≤–µ–Ω¬≠—Å—Ç–≤–æ.",
                                            size=17),
                                        ft.Text(
                                            "–±) ‚ÄØ‚ÄØ–ü—Ä–æ¬≠–≤–µ–¥—ë–º –≤—ã¬≠—Å–æ¬≠—Ç—É AD —Ç—Ä–µ¬≠—É–≥–æ–ª—å¬≠–Ω–∏¬≠–∫–∞ ABC. –í —Ç–æ–∂–µ –≤—Ä–µ–º—è AD‚ÄØ‚ÄØ‚Äî –≤—ã¬≠—Å–æ¬≠—Ç–∞ –ø–∏¬≠—Ä–∞¬≠–º–∏¬≠–¥—ã MPTA, –æ–ø—É¬≠—â–µ–Ω¬≠–Ω–∞—è –∏–∑ ",
                                            size=17),
                                        ft.Row(
                                            [
                                                ft.Text("–≤–µ—Ä¬≠—à–∏¬≠–Ω—ã A –Ω–∞ –ø–ª–æ—Å¬≠–∫–æ—Å—Ç—å –æ—Å¬≠–Ω–æ¬≠–≤–∞¬≠–Ω–∏—è MPT –∏ AD =  ", size=17),
                                                ft.Column(
                                                    [
                                                        ft.Text("BC‚àö3 ", size=17),
                                                        ft.Container(width=40, height=1, bgcolor=ft.Colors.BLACK),
                                                        ft.Text("  2 ", size=17),
                                                    ],
                                                    spacing=0,
                                                ),
                                                ft.Text(" = 4‚àö3 ", size=17),
                                            ],
                                            spacing=-10,
                                        ),
                                        ft.Row(
                                            [
                                                ft.Text("S(MPT) = ", size=17),
                                                ft.Column(
                                                    [
                                                        ft.Text(" 3", size=17),
                                                        ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                                        ft.Text(" 8", size=17),
                                                    ],
                                                    spacing=0,
                                                ),
                                                ft.Text("S(BCM). –°–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, ", size=18),
                                                ft.Text("S(MPT) = ", size=17),
                                                ft.Column(
                                                    [
                                                        ft.Text("3BC¬≤‚àö3", size=17),
                                                        ft.Container(width=50, height=1, bgcolor=ft.Colors.BLACK),
                                                        ft.Text("   32 ", size=17),
                                                    ],
                                                    spacing=0,
                                                ),
                                                ft.Text(" = ", size=17),
                                                ft.Column(
                                                    [
                                                        ft.Text("3 √ó 64‚àö3", size=17),
                                                        ft.Container(width=70, height=1, bgcolor=ft.Colors.BLACK),
                                                        ft.Text("   32 ", size=17),
                                                    ],
                                                    spacing=0,
                                                ),
                                                ft.Text(" = 6‚àö3 ", size=17),
                                            ],
                                            spacing=0,
                                        ),
                                        ft.Row(
                                            [
                                                ft.Text("–ù–∞–π–¥—ë–º –æ–±—ä—ë–º –ø–∏—Ä–∞–º–∏–¥—ã: V = ", size=17),
                                                ft.Column(
                                                    [
                                                        ft.Text(" 1", size=17),
                                                        ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                                        ft.Text(" 3", size=17),
                                                    ],
                                                    spacing=0,
                                                ),
                                                ft.Text("S(MPT) √ó AD = ", size=17),
                                                ft.Column(
                                                    [
                                                        ft.Text(" 1", size=17),
                                                        ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                                        ft.Text(" 3", size=17),
                                                    ],
                                                    spacing=0,
                                                ),
                                                ft.Text(" √ó 6‚àö3 √ó 4‚àö3 = 24 ", size=17),
                                            ],
                                            spacing=0,
                                        ),
                                        ft.Row(
                                            [
                                                ft.Text("–û—Ç–≤–µ—Ç: 24. ", size=18, weight=ft.FontWeight.BOLD),
                                            ],
                                            spacing=0,
                                        ),
                                    ],
                                    spacing=5,
                                )

            main_column.controls.append(show_tip14_V1_details0_2.solution_content)
            show_solution = True
            e.control.text = "–°–ø—Ä—è—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"

        page.update()

    def show_tip14_V1(e):
        details0.content = None
        page.update()

        global show_solution
        show_solution = False


        details0.content = ft.Column(
            scroll=ft.ScrollMode.AUTO,
            controls=[
                ft.ResponsiveRow(
                    controls=[

                        ft.Column(
                            col={"sm": 12, "md": 7},
                            controls=[
                                ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 14. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –û–±—ä—ë–º",
                                        size=12, weight=ft.FontWeight.BOLD),
                                ft.Row(
                                    controls=[
                                        ft.OutlinedButton("–ó–∞–¥–∞—á–∞ 1", on_click=show_tip14_V1,
                                                          style=ft.ButtonStyle(color="black"),
                                                          width=100),
                                        ft.OutlinedButton("–ó–∞–¥–∞—á–∞ 2", on_click=show_tip14_V2,
                                                          style=ft.ButtonStyle(color="black"),
                                                          width=100),
                                    ],
                                    spacing=10,
                                ),
                                ft.Text("–ó–∞–¥–∞—á–∞ ‚Ññ1", size=24, weight=ft.FontWeight.BOLD),
                                ft.Column([
                                    ft.Text(
                                        "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏ ABC –∏ MBC –ª–µ–∂–∞—Ç –≤ –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω—ã—Ö\n–ø–ª–æ—Å–∫–æ—Å—Ç—è—Ö, BC‚ÄØ‚ÄØ=‚ÄØ‚ÄØ8. –¢–æ—á–∫–∞ P‚ÄØ‚ÄØ‚Äî —Å–µ—Ä–µ–¥–∏–Ω–∞ CM, –∞ —Ç–æ—á–∫–∞ T\n–¥–µ–ª–∏—Ç –æ—Ç—Ä–µ–∑–æ–∫ BM —Ç–∞–∫, —á—Ç–æ BT‚ÄØ:‚ÄØTM‚ÄØ‚ÄØ=‚ÄØ‚ÄØ1‚ÄØ:‚ÄØ3.",
                                        size=20),
                                    ft.Text("a) –î–æ–∫–∞–∂–∏—Ç–µ, —á—Ç–æ CT > BP.", size=20),
                                    ft.Text("–±) –í—ã¬≠—á–∏—Å¬≠–ª–∏¬≠—Ç–µ –æ–±—ä—ë–º –ø–∏¬≠—Ä–∞¬≠–º–∏¬≠–¥—ã MPTA.", size=20),
                                ], spacing=3),
                                ft.Row(
                                    controls=[
                                        ft.TextButton(
                                            "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                                            on_click=show_tip14_V1_details0_2,
                                            style=ft.ButtonStyle(color="#4E426D"))
                                    ],
                                ),
                            ],
                            spacing=5,
                        ),

                        ft.Column(
                            col={"sm": 12, "md": 5},
                            controls=[
                                ft.Container(
                                    content=ft.Image(
                                        src="assets/v1.svg",
                                        width=250,
                                        height=250,
                                        fit=ft.ImageFit.CONTAIN,
                                    ),
                                    padding=10,
                                    alignment=ft.alignment.center,
                                ),
                                ft.ElevatedButton(
                                    "–û—Ç–∫—Ä—ã—Ç—å 3d –º–æ–¥–µ–ª—å",
                                    on_click=lambda e: start_pygame_with_V1(e),

                                    style=ft.ButtonStyle(color="#4E426D"),
                                    width=200,
                                )
                            ],
                            spacing=15,
                            horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                        )
                    ],
                    spacing=20,
                )
            ]
        )
        page.update()

    def show_tip14_V2(e):
        details0.content = None
        page.update()

        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 14. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –û–±—ä—ë–º",
                                size=12, weight=ft.FontWeight.BOLD),

                        ft.Text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å —ç—Ç–∞ –∑–∞–¥–∞—á–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", size=24, weight=ft.FontWeight.BOLD),
                    ]
                ),

            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()
    def show_tip14_sech1_details0_2(e):
        global show_solution

        main_container = details0.content

        if show_solution:
            for control in main_container.controls[0].controls:
                if isinstance(control, ft.Column) and len(control.controls) > 4:
                    control.controls.pop()
                    break
            show_solution = False
            e.control.text = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
        else:
            solution_content = ft.Column(
                controls=[
                    ft.Row([
                        ft.Text("–î–∞–Ω–æ:", size=18, weight=ft.FontWeight.BOLD),
                        ft.Text("ABCDA‚ÇÅB‚ÇÅC‚ÇÅD‚ÇÅ ‚Äî –∫—É–±; CE = EC‚ÇÅ; AA‚ÇÅ = 2", size=18)
                    ]),
                    ft.Text("a) —Å–µ—á–µ–Ω–∏–µ –∫—É–±–∞ –ø–ª–æ—Å–∫–æ—Å—Ç—å—é A‚ÇÅBE ‚Äî —ç—Ç–æ —Ä–∞–≤–Ω–æ–±–æ–∫–∞—è —Ç—Ä–∞–ø–µ—Ü–∏—è..",
                            size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–±) –ù–∞–π—Ç–∏: S(A‚ÇÅBE)", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text("–†–µ—à–µ–Ω–∏–µ:", size=18, weight=ft.FontWeight.BOLD),
                    ft.Text(
                        "–∞) –ü—Ä—è–º–∞—è BE –ø–µ—Ä–µ—Å–µ–∫–∞–µ—Ç –ø—Ä—è–º—É—é B‚ÇÅC‚ÇÅ –≤ —Ç–æ—á–∫–µ K. –ü—Ä—è–º–∞—è A‚ÇÅK –ø–µ—Ä–µ—Å–µ–∫–∞–µ—Ç —Ä–µ–±—Ä–æ C‚ÇÅD‚ÇÅ –≤ –µ–≥–æ —Å–µ—Ä–µ–¥–∏–Ω–µ ‚Äî —Ç–æ—á–∫–µ F. \nA‚ÇÅBEF ‚Äî —Å–µ—á–µ–Ω–∏–µ –∫—É–±–∞ –ø–ª–æ—Å–∫–æ—Å—Ç—å—é A‚ÇÅBE. –†–∞–≤–Ω–æ–±–µ–¥—Ä–µ–Ω–Ω—ã–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ A‚ÇÅBK –ø–æ–¥–æ–±–µ–Ω —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫—É KFE, \n–ø–æ—ç—Ç–æ–º—É FE‚à•A‚ÇÅB, —Ç–æ –µ—Å—Ç—å A‚ÇÅBEF ‚Äî —Ä–∞–≤–Ω–æ–±–æ–∫–∞—è —Ç—Ä–∞–ø–µ—Ü–∏—è.",
                        size=17),
                    ft.Text(
                        "–±) –í—ã—á–∏—Å–ª–∏–º —Å—Ç–æ—Ä–æ–Ω—ã —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ A‚ÇÅBK: A‚ÇÅK = BK = 2BE = 2‚àö5, A‚ÇÅB = ‚àö2√óAB = 2‚àö2 –∏ –≤—ã—Å–æ—Ç–∞",
                        size=17),
                    ft.Row(
                        [
                            ft.Text("KH¬≤ = BK¬≤ - (  ", size=17),
                            ft.Column(
                                [
                                    ft.Text(" A‚ÇÅB", size=17),
                                    ft.Container(width=33, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text("  2 ", size=17),
                                ],
                                spacing=0,
                            ),
                            ft.Text("  )¬≤ = 3‚àö2. ", size=17),
                        ],
                        spacing=-10,
                    ),
                    ft.Row(
                        [
                            ft.Text("–ü–æ—Å–∫–æ–ª—å–∫—É EF ‚Äî —Å—Ä–µ–¥–Ω—è—è –ª–∏–Ω–∏—è —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ A‚ÇÅBK –ø–æ–ª—É—á–∞–µ–º: S(KEF) = ", size=17),
                            ft.Column(
                                [
                                    ft.Text(" 1", size=17),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 4", size=17),
                                ],
                                spacing=0,
                            ),
                            ft.Text("S(A‚ÇÅBK), ", size=18),
                        ],
                    ),
                    ft.Row(
                        [
                            ft.Text("S(A‚ÇÅBEF) = S(A‚ÇÅBK) - S(KEF) = ", size=17),
                            ft.Column(
                                [
                                    ft.Text(" 3", size=17),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 4", size=17),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" S(A‚ÇÅBK) = ", size=17),
                            ft.Column(
                                [
                                    ft.Text(" 3", size=17),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 4", size=17),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" √ó ", size=17),
                            ft.Column(
                                [
                                    ft.Text(" 1", size=17),
                                    ft.Container(width=20, height=1, bgcolor=ft.Colors.BLACK),
                                    ft.Text(" 2", size=17),
                                ],
                                spacing=0,
                            ),
                            ft.Text(" √ó KH √ó A‚ÇÅB = 4,5.", size=17),
                        ],
                        spacing=0,
                    ),
                    ft.Row(
                        [
                            ft.Text("–û—Ç–≤–µ—Ç: 4,5. ", size=18, weight=ft.FontWeight.BOLD),
                        ],
                        spacing=0,
                    ),
                ],
                spacing=5,
            )

            for control in main_container.controls[0].controls:
                if isinstance(control, ft.Column) and control.col.get("md") == 7:
                    control.controls.append(solution_content)
                    break

            show_solution = True
            e.control.text = "–°–ø—Ä—è—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"

        page.update()

    def show_tip14_sech1(e):
        details0.content = ft.Column(
            scroll=ft.ScrollMode.AUTO,
            controls=[
                ft.ResponsiveRow(
                    controls=[
                        ft.Column(
                            col={"sm": 12, "md": 7},
                            controls=[
                                ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 14. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ü–ª–æ—â–∞–¥—å —Å–µ—á–µ–Ω–∏—è",
                                        size=12, weight=ft.FontWeight.BOLD),
                                ft.Row(
                                    controls=[
                                        ft.OutlinedButton("–ó–∞–¥–∞—á–∞ 1", on_click=show_tip14_sech1,
                                                          style=ft.ButtonStyle(color="black"), width=100),
                                        ft.OutlinedButton("–ó–∞–¥–∞—á–∞ 2", on_click=show_tip14_sech2,
                                                          style=ft.ButtonStyle(color="black"), width=100),
                                    ],
                                    spacing=10
                                ),
                                ft.Text("–ó–∞–¥–∞—á–∞ ‚Ññ1", size=24, weight=ft.FontWeight.BOLD),
                                ft.Column([
                                    ft.Text("–¢–æ—á–∫–∞ E ‚Äî —Å–µ—Ä–µ–¥–∏–Ω–∞ —Ä–µ–±—Ä–∞ CC‚ÇÅ –∫—É–±–∞ ABCDA‚ÇÅB‚ÇÅC‚ÇÅD‚ÇÅ.", size=20),
                                    ft.Text("a) –î–æ–∫–∞–∂–∏—Ç–µ, —á—Ç–æ —Å–µ—á–µ–Ω–∏–µ –∫—É–±–∞ –ø–ª–æ—Å–∫–æ—Å—Ç—å—é A‚ÇÅBE ‚Äî —ç—Ç–æ —Ä–∞–≤–Ω–æ–±–æ–∫–∞—è —Ç—Ä–∞–ø–µ—Ü–∏—è.",
                                            size=20),
                                    ft.Text("–±) –ù–∞–π–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å —ç—Ç–æ–≥–æ —Å–µ—á–µ–Ω–∏—è, –µ—Å–ª–∏ —Ä–µ–±—Ä–∞ –∫—É–±–∞ —Ä–∞–≤–Ω—ã 2.", size=20),
                                ], spacing=3),

                                ft.Row(
                                    controls=[

                                        ft.TextButton(
                                            "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                                            on_click=show_tip14_sech1_details0_2,
                                            style=ft.ButtonStyle(color="#4E426D")
                                        ),
                                    ],
                                    alignment=ft.MainAxisAlignment.SPACE_BETWEEN,
                                ),
                            ],
                            spacing=10,
                        ),
                        ft.Column(
                            col={"sm": 12, "md": 5},
                            controls=[
                                ft.Image(
                                    src="assets/sech1.svg",
                                    width=300,
                                    height=300,
                                    fit=ft.ImageFit.CONTAIN
                                ),
                                ft.ElevatedButton(
                                    "–û—Ç–∫—Ä—ã—Ç—å 3d –º–æ–¥–µ–ª—å",
                                    on_click=lambda e: start_pygame_with_sech1(e),
                                    style=ft.ButtonStyle(color="#4E426D")
                                ),
                            ],
                            spacing=15,
                            horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                        ),
                    ],
                    spacing=20,
                )
            ],
            expand=True
        )
        page.update()

    def show_tip14_sech2(e):
        details0.content = None
        page.update()
        details0.content = ft.ResponsiveRow(
            controls=[
                ft.Column(
                    col={"sm": 12, "md": 7},
                    controls=[
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞. –¢–∏–ø 14. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞: –ü–ª–æ—â–∞–¥—å —Å–µ—á–µ–Ω–∏—è",
                                size=12, weight=ft.FontWeight.BOLD),

                        ft.Text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å —ç—Ç–∞ –∑–∞–¥–∞—á–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", size=24, weight=ft.FontWeight.BOLD),
                    ]
                ),

            ],
            spacing=20,
            vertical_alignment=ft.CrossAxisAlignment.START,
        )
        page.update()

    def show_axy(e):
       axy(a1, a2, a3, details1, page, start_pygame_with_axy1, start_pygame_with_axy2, start_pygame_with_axy3, e)

    def show_axy_sled(e):
        sled_axy(sled_a1, sled_a2, details1, page, start_pygame_with_sled1, start_pygame_with_axy2, e)

    def show_axy_task(e):
        axy_task(details0, page, details1, start_pygame_with_axy1, start_pygame_with_axy2, start_pygame_with_axy3, start_pygame_with_axy_task2,start_pygame_with_axy_task3,start_pygame_with_axy_task4, e)

    def show_parallel_line(e):
        parallel_line(e, page, details1)

    def show_parallel_line_plane(e):
        parallel_line_plane(e, page, details1)

    def show_lines_arrangement(e):
        lines_arrangement(e, page, details1)

    def show_parallel_planes(e):
        parallel_planes(e, page, details1)

    def show_polyhedrons(e):
        polyhedrons(e, page, details1)

    def show_perpendicular_line_plane(e):
        perpendicular_line_plane(e, page, details1)

    def show_volumes(e):
        volumes(e, page, details1)




    #–§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤ –¥–ª—è –∑–∞–¥–∞—á –µ–≥—ç –∏ —Ç–µ–æ—Ä–∏–∏
    def create_dropdown(button_text, options, button_color=ft.Colors.BLACK, ):
        dropdown_visible = False
        dropdown = ft.Column(controls=[], visible=False)

        def show_dropdown(e):
            nonlocal dropdown_visible
            dropdown_visible = True
            dropdown.visible = True
            page.update()

        def hide_dropdown(e):
            nonlocal dropdown_visible
            if not dropdown_hovered:
                dropdown.visible = False
                page.update()

        dropdown_hovered = False

        def on_dropdown_hover(e):
            nonlocal dropdown_hovered
            dropdown_hovered = e.data == "true"

        button = ft.TextButton(
            button_text,
            on_hover=show_dropdown,
            style=ft.ButtonStyle(color=button_color)
        )

        def show_random_task_0(e):
            show_random_task(e)

        dropdown.controls = [
            ft.TextButton(
                option,
                on_click=show_axy if option == "‚Ä¢ –ê–∫—Å–∏–æ–º—ã" else show_axy_task if option == "‚Ä¢ –ó–∞–¥–∞—á–∏" else show_axy_sled if option == "‚Ä¢ –°–ª–µ–¥—Å—Ç–≤–∏—è –∞–∫—Å–∏–æ–º"
                else show_parallel_line if option =="‚Ä¢ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –ø—Ä—è–º—ã–µ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ" else show_parallel_line_plane if option == "‚Ä¢ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä—è–º–æ–π –∏ –ø–ª–æ—Å–∫–æ—Å—Ç–∏" else show_lines_arrangement if option == "‚Ä¢ –í–∑–∞–∏–º–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø—Ä—è–º—ã—Ö –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ" else show_parallel_planes if option == "‚Ä¢ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ—Å—Ç—å –ø–ª–æ—Å–∫–æ—Å—Ç–µ–π " else show_perpendicular_line_plane if option == "‚Ä¢ –ü–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–æ—Å—Ç—å –ø—Ä—è–º–æ–π –∏ –ø–ª–æ—Å–∫–æ—Å—Ç–∏ "
                else show_volumes if option == "‚Ä¢ –ü–æ–Ω—è—Ç–∏–µ –æ–±—ä—ë–º–∞"
                else show_tip3_cube1 if option == "–ö—É–±" else show_tip3_pir1 if option == "–ü–∏—Ä–∞–º–∏–¥–∞" else show_tip3_par2 if option == "–ü–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥" else show_tip3_mngg1 if option == "–û–±—ä—ë–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã—Ö –º–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω–∏–∫–æ–≤" else show_tip3_vprizm1 if option == "–ü—Ä–∏–∑–º–∞ (–æ–±—ä—ë–º)" else show_tip3_sprizm1 if option == "–ü—Ä–∏–∑–º–∞ (–ø–ª–æ—â–∞–¥—å)" else show_tip3_cyli if option == "–¶–∏–ª–∏–Ω–¥—Ä (–ø–ª–æ—â–∞–¥—å)" else show_tip3_sphere if option == "–°—Ñ–µ—Ä–∞ –∏ —à–∞—Ä" else show_random_task_0 if option == "–°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–∞—á–∞"
                else show_tip14_rast if option == "–†–∞—Å—Å—Ç–æ—è–Ω–∏—è" else show_tip14_ygol1 if option == "–£–≥–ª—ã" else show_tip14_V1 if option == "–û–±—ä—ë–º" else show_tip14_sech1 if option == "–ü–ª–æ—â–∞–¥—å —Å–µ—á–µ–Ω–∏—è" else None,

            ) for option in options
        ]

        container = ft.Container(
            content=ft.Column([
                button,
                ft.Container(
                    content=dropdown,
                    margin=ft.margin.only(left=20)
                )
            ]),
            on_hover=on_dropdown_hover,
            bgcolor=ft.Colors.TRANSPARENT,
        )

        return container, hide_dropdown


    container1, hide1 = create_dropdown("–¢–∏–ø 3. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è:",
                                        ["–ö—É–±", "–ü–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥", "–ü–∏—Ä–∞–º–∏–¥–∞", "–û–±—ä—ë–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã—Ö –º–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω–∏–∫–æ–≤",
                                         "–ü—Ä–∏–∑–º–∞ (–æ–±—ä—ë–º)", "–ü—Ä–∏–∑–º–∞ (–ø–ª–æ—â–∞–¥—å)", "–¶–∏–ª–∏–Ω–¥—Ä (–ø–ª–æ—â–∞–¥—å)", "–°—Ñ–µ—Ä–∞ –∏ —à–∞—Ä", "–°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–∞—á–∞"])

    container2, hide2 = create_dropdown("–¢–∏–ø 14. –°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è\n–∑–∞–¥–∞—á–∞:", ["–£–≥–ª—ã", "–†–∞—Å—Å—Ç–æ—è–Ω–∏—è", "–ü–ª–æ—â–∞–¥—å —Å–µ—á–µ–Ω–∏—è", "–û–±—ä—ë–º"])

    container3, hide3 = create_dropdown(
        "1. –ê–∫—Å–∏–æ–º—ã —Å—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏–∏.",
        ["‚Ä¢ –ê–∫—Å–∏–æ–º—ã", "‚Ä¢ –°–ª–µ–¥—Å—Ç–≤–∏—è –∞–∫—Å–∏–æ–º", "‚Ä¢ –ó–∞–¥–∞—á–∏"],

        button_color=ft.Colors.BLACK,

    )
    container4, hide4 = create_dropdown(
        "2. –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä—è–º—ã—Ö –∏ –ø–ª–æ—Å–∫–æ—Å—Ç–µ–π",
        ["‚Ä¢ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –ø—Ä—è–º—ã–µ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ", "‚Ä¢ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä—è–º–æ–π –∏ –ø–ª–æ—Å–∫–æ—Å—Ç–∏", "‚Ä¢ –í–∑–∞–∏–º–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø—Ä—è–º—ã—Ö –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ", "‚Ä¢ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ—Å—Ç—å –ø–ª–æ—Å–∫–æ—Å—Ç–µ–π ", ],

        button_color=ft.Colors.BLACK,

    )
    container5, hide5 = create_dropdown(
        "3. –ü–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–æ—Å—Ç—å –ø—Ä—è–º—ã—Ö –∏ –ø–ª–æ—Å–∫–æ—Å—Ç–µ–π",
        ["‚Ä¢ –ü–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–æ—Å—Ç—å –ø—Ä—è–º–æ–π –∏ –ø–ª–æ—Å–∫–æ—Å—Ç–∏ ", ],

        button_color=ft.Colors.BLACK,

    )

    container6, hide6 = create_dropdown(
        "4. –û–±—ä—ë–º—ã —Ç–µ–ª",
        ["‚Ä¢ –ü–æ–Ω—è—Ç–∏–µ –æ–±—ä—ë–º–∞", ],

        button_color=ft.Colors.BLACK,

    )


    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ —Ñ–∏–≥—É—Ä
    def show_catalog(e):
        main_container.content = ft.Row(
            [
                navigation,
                ft.VerticalDivider(width=1, color="#DDD"),
                get_catalog_container(page, details),
                details,
            ],
            alignment=ft.MainAxisAlignment.START,
            vertical_alignment=ft.CrossAxisAlignment.STRETCH,
        )
        page.update()

    # –§—É–Ω–∫—Ü–∏—è –≥–ª–∞–≤–Ω–æ–π —Ç—Å—Ä–∞–Ω–∏—Ü—ã
    def glavn(e):

        main_container.content = ft.Row(
            [
                navigation,
                ft.VerticalDivider(width=1, color="#DDD"),
                glavn,

            ],
            alignment=ft.MainAxisAlignment.START,
            vertical_alignment=ft.CrossAxisAlignment.STRETCH,
        )
        page.update()


    # –ö–∞—Ç–∞–ª–æ–≥ –ï–ì–≠
    def show_catalog_ege(e):

        scrollable_content = ft.Column(
            [
                ft.Stack(
                    [
                        details0_2,
                        details0
                    ],
                    expand=True,
                )
            ],
            scroll=ft.ScrollMode.AUTO,
            expand=True,
        )

        main_container.content = ft.Row(
            [
                navigation,
                ft.VerticalDivider(width=1, color="#DDD"),
                catalog_ege,
                scrollable_content,
            ],
            alignment=ft.MainAxisAlignment.START,
            vertical_alignment=ft.CrossAxisAlignment.STRETCH,
            expand=True,
        )
        page.update()

    # –¢–µ–æ—Ä–∏—è
    def show_teoria(e):

        main_container.content = ft.Row(
            [
                navigation,
                ft.VerticalDivider(width=1, color="#DDD"),
                teoria,
                details1
            ],
            alignment=ft.MainAxisAlignment.START,
            vertical_alignment=ft.CrossAxisAlignment.STRETCH,
        )
        page.update()


    # –í—ã–∑–æ–≤ –æ–∫–Ω–∞ —Å –º–æ–¥–µ–ª—è–º–∏ –¥–ª—è –∑–∞–¥–∞—á –µ–≥—ç 3 —Ç–∏–ø–∞
    def start_pygame_with_cube1(e):
        run_with_check(run_pygame1_1, e)
    def start_pygame_with_cube1_sv(e):
        run_with_check(run_pygame1_1_svetl, e)
    def start_pygame_with_cube2(e):
        run_with_check(run_pygame1, e)
    def start_pygame_with_par2_sv(e):
        run_with_check(run_pygame_tip3_par2_sv, e)
    def start_pygame_with_par2_dark(e):
        run_with_check(run_pygame_par2_dark, e)
    def start_pygame_with_pir1(e):
        run_with_check(run_pygame_tip3_pir1, e)
    def start_pygame_with_mngg1(e):
        run_with_check(run_pygame_tip3_mngg, e)
    def start_pygame_with_mngg1_dark(e):
        run_with_check(run_pygame_tip3_mngg_dark, e)


    # –í—ã–∑–æ–≤ –æ–∫–Ω–∞ —Å –º–æ–¥–µ–ª—è–º–∏ –¥–ª—è –∑–∞–¥–∞—á –µ–≥—ç 14 —Ç–∏–ø–∞
    def start_pygame_with_rast1(e):
        run_with_check(run_pygame_tip14_rast1, e)
    def start_pygame_with_rast2(e):
        run_with_check(run_pygame_tip14_rast2, e)
    def start_pygame_with_ygol1(e):
        run_with_check(run_pygame_tip14_ygol1, e)
    def start_pygame_with_ygol1_sv(e):
        run_with_check(run_pygame_tip14_ygol1_sv, e)
    def start_pygame_with_sech1(e):
        run_with_check(run_pygame_tip14_sech1, e)
    def start_pygame_with_V1(e):
        run_with_check(run_pygame_tip14_V1, e)
    def start_pygame_with_figure(draw_function, persp):
        threading.Thread(target=run_pygame, args=(draw_function, persp), daemon=True).start()

    # –í—ã–∑–æ–≤ –æ–∫–Ω–∞ —Å –º–æ–¥–µ–ª—è–º–∏ —Ç–µ–æ—Ä–∏–∏
    def start_pygame_with_axy1(e):
        run_with_check(run_axy1, e)
    def start_pygame_with_axy2(e):
        run_with_check(run_axy2, e)
    def start_pygame_with_axy3(e):
        run_with_check(run_axy3, e)

    def start_pygame_with_sled1(e):
        run_with_check(run_sled1, e)

    def start_pygame_with_axy_task2(e):
        run_with_check(run_axy_task2, e)
    def start_pygame_with_axy_task3(e):
        run_with_check(run_axy_task3, e)
    def start_pygame_with_axy_task4(e):
        run_with_check(run_axy_task4, e)

    # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    var = "assets/–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ —Ç–≤–æ—Ä–µ–Ω–∏–µ –≤–∞—Ä–∏ 4.jpg"

    ico = "D:/pythonProject1/png/ico.ico"
    image_base64_2 = "D:/pythonProject1/png/cube0.jpg"
    cube2_2 = "assets/cube0_2.jpg"
    prism_3 = "assets/3prism.jpg"
    prism_4 = "assets/4_prism.jpg"
    prism_5 = "assets/5prism.jpg"
    prism_6 = "assets/6-2prism.jpg"
    prism_7 = "assets/nakl.prism.jpg"
    piramid_30 = "assets/3piramid.jpg"
    piramid_40 = "assets/4piramid.jpg"
    piramid_60 ="assets//6piramid.jpg"
    piramid_70 = "assets/ys_piramid.jpg"
    vrash1 ="assets/–∫–æ–Ω—É—Å.jpg"
    vrash2 = "assets/–∏–ª–∏–Ω–Ω–¥—Ä.jpg"
    vrash3 = "assets/—à–∞—Ä.jpg"
    rast14_2 = "assets/14–∫rast2.jpg"
    rast14_2_2 = "assets/—Ä–∞—Å—Ç2.jpg"
    sech1 = "assets/sech1.svg"
    vprizm1 = "assets/sprizm1(2).svg"
    pir1 = "assets/pir1.svg"
    mng1 = "assets/mng1.svg"
    ygol1 = "assets/ygol.svg"
    v1 =  "assets/v1.svg"
    a1 = "assets/a1.svg"
    a2 = "assets/a2.svg"
    a3 = "assets/a3_ok.svg"
    sled_a1 = "assets/sled_a1.svg"
    sled_a2 = "assets/sled_a2.svg"


    def copy_text(e):
        text_to_copy = "yanyuush@gmail.com"
        pyperclip.copy(text_to_copy)
        print("–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!")

        if not hasattr(dlg_modal, 'original_content'):
            dlg_modal.original_content = dlg_modal.content

        dlg_modal.content = ft.Column(
            controls=[
                dlg_modal.original_content,
                ft.Text("–ü–æ—á—Ç–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞", color=ft.Colors.GREEN, size=12)
            ],
            tight=True,
        )
        e.page.update()

    def copy_text2(e):
        text_to_copy = "@yanyushh"
        pyperclip.copy(text_to_copy)
        print("–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!")

        if not hasattr(dlg_modal, 'original_content'):
            dlg_modal.original_content = dlg_modal.content

        dlg_modal.content = ft.Column(
            controls=[
                dlg_modal.original_content,
                ft.Text("–¢–≥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω", color=ft.Colors.GREEN, size=12)
            ],
            tight=True,
        )
        e.page.update()

    copy_button = ft.TextButton(
        "–ü–æ—á—Ç–∞: yanyuush@gmail.com",
        on_click=copy_text,
        icon=ft.Icons.COPY,
    )
    copy_button2 = ft.TextButton(
        "Telegram: @yanyushh",
        on_click=copy_text2,
        icon=ft.Icons.COPY,
    )
    dlg_modal = ft.AlertDialog(
        title=ft.Text("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!"),
        content=ft.Text(
            "–†–∞–¥–∞ —á—Ç–æ –≤—ã –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏—Å—å –º–æ–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º!\n–ë—É–¥—É –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ –µ—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –º–Ω–µ —Å–≤–æ–∏ \n–æ—Ç–∑—ã–≤—ã –∏/–∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è! \n–ï—Å–ª–∏ –≤—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –æ—à–∏–±–∫—É –≤ —Ä–∞–±–æ—Ç–µ –º–æ–µ–≥–æ \n–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø—Ä–æ—à—É —Å–æ–æ–±—â–∏—Ç—å –º–Ω–µ –æ–± —ç—Ç–æ–º!"),
        actions=[ ft.Column([copy_button,
            copy_button2,]),

        ],
        actions_alignment=ft.MainAxisAlignment.START,
    )

    def open_dlg_modal(e):

        current_page = e.page if hasattr(e, 'page') and e.page is not None else page

        if current_page is None:
            print("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É")
            return

        if dlg_modal not in current_page.overlay:
            current_page.overlay.append(dlg_modal)
        dlg_modal.open = True
        current_page.update()

    glavn = ft.Container(
        content=ft.Row(
            [
                ft.Container(

                    width=50,
                    height=50,
                ),
                ft.Column(
                    [
                        ft.Container(

                            width=50,
                            height=50,
                        ),
                        ft.Column([
                            ft.Text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Stereometry 360¬∞", size=20, weight=ft.FontWeight.BOLD,
                                    color="#837e94"),
                            ft.Column([

                                ft.Text("–ò–∑—É—á–∏ —Å—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—é", size=52, weight=ft.FontWeight.BOLD,
                                        color="#6A4C9C"),
                                ft.Text("—Å–æ –≤—Å–µ—Ö —Å—Ç–æ—Ä–æ–Ω!", size=52, weight=ft.FontWeight.BOLD,
                                        color="#6A4C9C"), ], spacing=-20),
                        ], spacing=-10),

                        ft.Text(
                            "Stereometry 360¬∞ ‚Äî –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ \n—Å—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏–∏! –ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –º–∏—Ä —Ç—Ä—ë—Ö–º–µ—Ä–Ω—ã—Ö \n–º–æ–¥–µ–ª–µ–π, –∏—Å—Å–ª–µ–¥—É–π—Ç–µ —Ñ–∏–≥—É—Ä—ã –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ \n–∏ –æ—Å–≤–æ–π—Ç–µ —Å–ª–æ–∂–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ —á–µ—Ä–µ–∑ –Ω–∞–≥–ª—è–¥–Ω—É—é \n–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –≤ —Ç—Ä—ë—Ö–º–µ—Ä–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.",
                            size=20,
                            color="black"),
                        ft.Text(
                            "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! \n–ü—Ä–æ—Å–∏–º –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ –æ–∫–Ω–∞ —Ç—Ä—ë—Ö–º–µ—Ä–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –ø—Ä–∏ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ–º –æ–∫–Ω–µ!",
                            size=12, color="black"),

                        ft.Container(

                            width=25,
                            height=25,
                        ),
                        ft.Text(
                            "–ß—Ç–æ —Ö–æ—á–µ—à—å –∏–∑—É—á–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è?",
                            size=20,
                            color="black"),
                        ft.Row([
                            ft.OutlinedButton("–¢—Ä—ë—Ö–º–µ—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏", on_click=show_catalog,
                                              style=ft.ButtonStyle(color="#6A4C9C"),
                                              width=200),
                            ft.OutlinedButton("–ó–∞–¥–∞—á–∏ –ï–ì–≠", on_click=show_catalog_ege,
                                              style=ft.ButtonStyle(color="#6A4C9C"),
                                              width=200),
                            ft.OutlinedButton("–¢–µ–æ—Ä–∏—è", on_click=show_teoria,
                                              style=ft.ButtonStyle(color="#6A4C9C"),
                                              width=200),
                        ]),
                    ],
                    spacing=10,
                    alignment=ft.MainAxisAlignment.START,
                ),
                ft.Column(
                    [

                        ft.Image(
                            var,
                            width=670,
                            height=670,
                            fit=ft.ImageFit.CONTAIN,
                        ),
                    ], expand=True,
                )

            ],

            spacing=0,
            alignment=ft.MainAxisAlignment.START,
            expand=True,
        ),
        expand=True,
        padding=0,
        border_radius=16,

    )

    # –§—É–Ω–∫—Ü–∏–∏ —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö –∑–∞–¥–∞—á —Ç–∏–ø–∞ 3
    def get_random_unsolved_task():
        # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á
        all_tasks = [
            ("tip3_cube1", "–ö—É–±: –ó–∞–¥–∞—á–∞ 1", show_tip3_cube1),
            ("tip3_cube2", "–ö—É–±: –ó–∞–¥–∞—á–∞ 2", show_tip3_cube2),
            ("tip3_pir1", "–ü–∏—Ä–∞–º–∏–¥–∞: –ó–∞–¥–∞—á–∞ 1", show_tip3_pir1),
            ("tip3_par1", "–ü–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥: –ó–∞–¥–∞—á–∞ 1", show_tip3_par1),
            ("tip3_par2", "–ü–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥: –ó–∞–¥–∞—á–∞ 2", show_tip3_par2),
            ("tip3_mngg1", "–ú–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω–∏–∫–∏: –ó–∞–¥–∞—á–∞ 1", show_tip3_mngg1),
            ("tip3_vprizm1", "–ü—Ä–∏–∑–º–∞ (–æ–±—ä–µ–º): –ó–∞–¥–∞—á–∞ 1", show_tip3_vprizm1),
            ("tip3_sprizm1", "–ü—Ä–∏–∑–º–∞ (–ø–ª–æ—â–∞–¥—å): –ó–∞–¥–∞—á–∞ 1", show_tip3_sprizm1)
        ]

        # –§–∏–ª—å—Ç—Ä –∑–∞–¥–∞—á
        unsolved_tasks = [task for task in all_tasks if not is_task_solved(task[0])]

        if not unsolved_tasks:
            return None

        # –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–π
        return random.choice(unsolved_tasks)

    def show_random_task(e):
        task = get_random_unsolved_task()
        if task:
            task_id, task_name, task_func = task
            task_func(e)

        else:
            # –ï—Å–ª–∏ –≤—Å–µ –∑–∞–¥–∞—á–∏ —Ä–µ—à–µ–Ω—ã
            details0.content = ft.Column(
                controls=[
                    ft.Text("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!", size=24, weight=ft.FontWeight.BOLD),
                    ft.Text("–í—ã —Ä–µ—à–∏–ª–∏ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Ç–∏–ø–∞ 3!", size=18),

                ],
                alignment=ft.MainAxisAlignment.CENTER,
                horizontal_alignment=ft.CrossAxisAlignment.CENTER
            )
            page.update()


    catalog_ege = ft.Container(
        content=ft.Column(
            [
                ft.Column(
                    [
                        ft.Text("–ö–∞—Ç–∞–ª–æ–≥ –ï–ì–≠:", size=24, weight=ft.FontWeight.BOLD,
                                color="#6A4C9C"),
                        ft.Text("–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞", size=18, weight=ft.FontWeight.BOLD,
                                color="#6A4C9C"),
                    ],
                    spacing=3,
                    alignment=ft.MainAxisAlignment.START,
                ),
                ft.Text("–ü–µ—Ä–≤–∞—è —á–∞—Å—Ç—å:", size=16, color="black"),
                ft.Container(content=container1, on_hover=hide1),

                ft.Text("–í—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å:", size=16, color="black"),
                ft.Container(content=container2, on_hover=hide2),

            ],
            spacing=5,
            alignment=ft.MainAxisAlignment.START,

        ),
        width=300,
        padding=20,
        border_radius=16,

    )
    teoria = ft.Container(
        content=ft.Column(
            [
                ft.Column(
                    [
                        ft.Text("–¢–µ–æ—Ä–∏—è —Å—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏–∏:", size=24, weight=ft.FontWeight.BOLD,
                                color="#6A4C9C"),
                    ],
                    spacing=3,
                    alignment=ft.MainAxisAlignment.START,
                ),

                ft.Container(content=container3, on_hover=hide3),
                ft.Container(content=container4, on_hover=hide4),
                ft.Container(content=container5, on_hover=hide5),
                ft.Container(content=container6, on_hover=hide6),

            ],
            spacing=5,
            alignment=ft.MainAxisAlignment.START,
        ),
        width=300,
        padding=20,
        border_radius=16,

    )

    details = ft.Container(
        content=ft.Text("", size=16, color="#666"),
        expand=True,
        padding=20,
    )

    details0 = ft.Container(
        content=None,
        expand=True,
        padding=25,

    )
    details1 = ft.Container(
        content=None,
        expand=True,
        padding=25,

    )
    details0_2 = ft.Container(
        content=None,
        expand=True,
        padding=25,

    )
    details_main = ft.Container(
        content=None,
        expand=True,
        padding=25,

    )

    catalog = get_catalog_container(page, details)

    navigation = ft.Container(
        content=ft.Column(
            [
                ft.Row(
                    [
                        ft.Image(
                            src="assets/objekte.png",
                            width=35,
                            height=35
                        ),
                        ft.Text("Stereometry 360¬∞", size=19, weight=ft.FontWeight.BOLD, color="#6A4C9C"),
                    ],
                    alignment=ft.MainAxisAlignment.START,
                    spacing=10,
                ),

                ft.Column(
                    [
                        ft.TextButton("–ì–ª–∞–≤–Ω–∞—è", icon="home", on_click=glavn, icon_color="#4E426D",
                                      style=ft.ButtonStyle(color="#4E426D")),
                        ft.TextButton("–ö–∞—Ç–∞–ª–æ–≥ –º–æ–¥–µ–ª–µ–π", on_click=show_catalog, icon="grid_view", icon_color="#4E426D",
                                      style=ft.ButtonStyle(color="#4E426D")),
                        ft.TextButton("–ö–∞—Ç–∞–ª–æ–≥ –ï–ì–≠", on_click=show_catalog_ege, icon="school", icon_color="#4E426D",
                                      style=ft.ButtonStyle(color="#4E426D")),
                        ft.TextButton("–¢–µ–æ—Ä–∏—è", on_click=show_teoria, icon="calculate", icon_color="#4E426D",
                                      style=ft.ButtonStyle(color="#4E426D")),
                    ],
                    alignment=ft.MainAxisAlignment.START,
                ),

                # –î–æ–±–∞–≤–ª—è—é —Ä–∞—Å—à–∏—Ä—è—é—â–∏–π—Å—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –≤–Ω–∏–∑—É
                ft.Container(expand=True),
                ft.TextButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç –∞–≤—Ç–æ—Ä–∞", on_click=open_dlg_modal, style=ft.ButtonStyle(color="#4E426D"))
            ],
            spacing=20,
            expand=True,
        ),
        width=250,
        padding=20,
        bgcolor="#ECEAF1",
        border_radius=20,
    )

    main_container = ft.Container(
        content=ft.Row(
            [navigation, glavn, ],

            alignment=ft.MainAxisAlignment.START,
            vertical_alignment=ft.CrossAxisAlignment.STRETCH,
        ),
        expand=True,
    )

    page.add(main_container)

ft.app(target=main, assets_dir="assets")
